### YamlMime:PythonClass
uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
name: ReviewsOperations
fullName: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations
module: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations
inheritances:
- builtins.object
summary: ReviewsOperations operations.
constructor:
  syntax: ReviewsOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: 'The content type. Constant value: "text/plain".'
  name: content_type
methods:
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame
  name: add_video_frame
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    &lt;h3&gt;CallBack Schemas &lt;/h3&gt;

    &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;

    &lt;p&gt;

    {&lt;br/&gt;

    "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;

    "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;

    "CallBackType": "Review",&lt;br/&gt;

    "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    },&lt;br/&gt;

    "ReviewerResultTags": {&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;.'
  signature: add_video_frame(team_name, review_id, timescale=None, custom_headers=None,
    raw=False, **operation_config)
  parameters:
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: timescale
    description: Timescale of the video you are adding frames to.
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_stream
  name: add_video_frame_stream
  summary: 'Use this method to add frames for a video review.Timescale: This

    parameter is a factor which is used to convert the timestamp on a frame

    into milliseconds. Timescale is provided in the output of the Content

    Moderator video media processor on the Azure Media Services

    platform.Timescale in the Video Moderation output is Ticks/Second.'
  signature: add_video_frame_stream(content_type, team_name, review_id, frame_image_zip,
    frame_metadata, timescale=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: content_type
    description: The content type.
    isRequired: true
    types:
    - <xref:str>
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: frame_image_zip
    description: Zip file containing frame images.
    isRequired: true
    types:
    - <xref:typing.Generator>
  - name: frame_metadata
    description: Metadata of the frame.
    isRequired: true
    types:
    - <xref:str>
  - name: timescale
    description: Timescale of the video .
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_frame_url
  name: add_video_frame_url
  summary: 'Use this method to add frames for a video review.Timescale: This

    parameter is a factor which is used to convert the timestamp on a frame

    into milliseconds. Timescale is provided in the output of the Content

    Moderator video media processor on the Azure Media Services

    platform.Timescale in the Video Moderation output is Ticks/Second.'
  signature: add_video_frame_url(content_type, team_name, review_id, video_frame_body,
    timescale=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: content_type
    description: The content type.
    isRequired: true
    types:
    - <xref:str>
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: video_frame_body
    description: Body for add video frames API
    isRequired: true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.contentmoderator.models.VideoFrameBodyItem>]
  - name: timescale
    description: Timescale of the video.
    defaultValue: None
    types:
    - <xref:int>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript
  name: add_video_transcript
  summary: 'This API adds a transcript file (text version of all the words spoken

    in a video) to a video review. The file should be a valid WebVTT

    format.'
  signature: add_video_transcript(team_name, review_id, vt_tfile, custom_headers=None,
    raw=False, callback=None, **operation_config)
  parameters:
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: vt_tfile
    description: Transcript file of the video.
    isRequired: true
    types:
    - <xref:typing.Generator>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: callback
    description: 'When specified, will be called with each chunk of

      data that is streamed. The callback should take two arguments, the

      bytes of the current chunk of data and the response object. If the

      data is uploading, response will be None.'
    defaultValue: None
    types:
    - <xref:typing.Callable>[<xref:Bytes>, <xref:response=None>]
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.add_video_transcript_moderation_result
  name: add_video_transcript_moderation_result
  summary: 'This API adds a transcript screen text result file for a video review.

    Transcript screen text result file is a result of Screen Text API . In

    order to generate transcript screen text result file , a transcript

    file has to be screened for profanity using Screen Text API.'
  signature: add_video_transcript_moderation_result(content_type, team_name, review_id,
    transcript_moderation_body, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: content_type
    description: The content type.
    isRequired: true
    types:
    - <xref:str>
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: transcript_moderation_body
    description: 'Body for add video transcript

      moderation result API'
    isRequired: true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem>]
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_job
  name: create_job
  summary: 'A job Id will be returned for the content posted on this endpoint.

    Once the content is evaluated against the Workflow provided the review

    will be created or ignored based on the workflow expression.

    &lt;h3&gt;CallBack Schemas &lt;/h3&gt;

    &lt;p&gt;

    &lt;h4&gt;Job Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;

    {&lt;br/&gt;

    "JobId": "&lt;Job Id&gt;,&lt;br/&gt;

    "ReviewId": "&lt;Review Id, if the Job resulted in a Review to be

    created&gt;",&lt;br/&gt;

    "WorkFlowId": "default",&lt;br/&gt;

    "Status": "&lt;This will be one of Complete, InProgress, Error&gt;",&lt;br/&gt;

    "ContentType": "Image",&lt;br/&gt;

    "ContentId": "&lt;This is the ContentId that was specified on

    input&gt;",&lt;br/&gt;

    "CallBackType": "Job",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;

    &lt;p&gt;

    &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;&lt;br/&gt;

    {

    "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;

    "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;

    "CallBackType": "Review",&lt;br/&gt;

    "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    },&lt;br/&gt;

    "ReviewerResultTags": {&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;.'
  signature: create_job(team_name, content_type, content_id, workflow_name, job_content_type,
    content_value, call_back_endpoint=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: 'Image, Text or Video. Possible values include:

      ''Image'', ''Text'', ''Video'''
    isRequired: true
    types:
    - <xref:str>
  - name: content_id
    description: Id/Name to identify the content submitted.
    isRequired: true
    types:
    - <xref:str>
  - name: workflow_name
    description: Workflow Name that you want to invoke.
    isRequired: true
    types:
    - <xref:str>
  - name: job_content_type
    description: 'The content type. Possible values include:

      ''application/json'', ''image/jpeg'''
    isRequired: true
    types:
    - <xref:str>
  - name: content_value
    description: Content to evaluate for a job.
    isRequired: true
    types:
    - <xref:str>
  - name: call_back_endpoint
    description: 'Callback endpoint for posting the create

      job result.'
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: JobId or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.contentmoderator.models.JobId>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_reviews
  name: create_reviews
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    &lt;h3&gt;CallBack Schemas &lt;/h3&gt;

    &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;

    &lt;p&gt;

    {&lt;br/&gt;

    "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;

    "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;

    "CallBackType": "Review",&lt;br/&gt;

    "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    },&lt;br/&gt;

    "ReviewerResultTags": {&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;.'
  signature: create_reviews(url_content_type, team_name, create_review_body, sub_team=None,
    custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: url_content_type
    description: The content type.
    isRequired: true
    types:
    - <xref:str>
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_review_body
    description: Body for create reviews API
    isRequired: true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem>]
  - name: sub_team
    description: 'SubTeam of your team, you want to assign the created

      review to.'
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:str>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.create_video_reviews
  name: create_video_reviews
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    &lt;h3&gt;CallBack Schemas &lt;/h3&gt;

    &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;

    &lt;p&gt;

    {&lt;br/&gt;

    "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;

    "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;

    "CallBackType": "Review",&lt;br/&gt;

    "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    },&lt;br/&gt;

    "ReviewerResultTags": {&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;.'
  signature: create_video_reviews(content_type, team_name, create_video_reviews_body,
    sub_team=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: content_type
    description: The content type.
    isRequired: true
    types:
    - <xref:str>
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: create_video_reviews_body
    description: Body for create reviews API
    isRequired: true
    types:
    - <xref:list>[<xref:azure.cognitiveservices.vision.contentmoderator.models.CreateVideoReviewsBodyItem>]
  - name: sub_team
    description: 'SubTeam of your team, you want to assign the created

      review to.'
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: list or ClientRawResponse if raw=true
    types:
    - <xref:list>[<xref:str>]
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_job_details
  name: get_job_details
  summary: Get the Job Details for a Job Id.
  signature: get_job_details(team_name, job_id, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: team_name
    description: Your Team Name.
    isRequired: true
    types:
    - <xref:str>
  - name: job_id
    description: Id of the job.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Job or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.contentmoderator.models.Job>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_review
  name: get_review
  summary: Returns review details for the review Id passed.
  signature: get_review(team_name, review_id, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: team_name
    description: Your Team Name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Review or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.contentmoderator.models.Review>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.get_video_frames
  name: get_video_frames
  summary: 'The reviews created would show up for Reviewers on your team. As

    Reviewers complete reviewing, results of the Review would be POSTED

    (i.e. HTTP POST) on the specified CallBackEndpoint.

    &lt;h3&gt;CallBack Schemas &lt;/h3&gt;

    &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt;

    &lt;p&gt;

    {&lt;br/&gt;

    "ReviewId": "&lt;Review Id&gt;",&lt;br/&gt;

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt;

    "ModifiedBy": "&lt;Name of the Reviewer&gt;",&lt;br/&gt;

    "CallBackType": "Review",&lt;br/&gt;

    "ContentId": "&lt;The ContentId that was specified input&gt;",&lt;br/&gt;

    "Metadata": {&lt;br/&gt;

    "adultscore": "0.xxx",&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "racyscore": "0.xxx",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    },&lt;br/&gt;

    "ReviewerResultTags": {&lt;br/&gt;

    "a": "False",&lt;br/&gt;

    "r": "True"&lt;br/&gt;

    }&lt;br/&gt;

    }&lt;br/&gt;

    &lt;/p&gt;.'
  signature: get_video_frames(team_name, review_id, start_seed=None, no_of_records=None,
    filter=None, custom_headers=None, raw=False, **operation_config)
  parameters:
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: start_seed
    description: 'Time stamp of the frame from where you want to

      start fetching the frames.'
    defaultValue: None
    types:
    - <xref:int>
  - name: no_of_records
    description: Number of frames to fetch.
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: Get frames filtered by tags.
    defaultValue: None
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: Frames or ClientRawResponse if raw=true
    types:
    - <xref:azure.cognitiveservices.vision.contentmoderator.models.Frames>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.publish_video_review
  name: publish_video_review
  summary: Publish video review to make it available for review.
  signature: publish_video_review(team_name, review_id, custom_headers=None, raw=False,
    **operation_config)
  parameters:
  - name: team_name
    description: Your team name.
    isRequired: true
    types:
    - <xref:str>
  - name: review_id
    description: Id of the review.
    isRequired: true
    types:
    - <xref:str>
  - name: custom_headers
    description: headers that will be added to the request
    defaultValue: None
    types:
    - <xref:dict>
  - name: raw
    description: 'returns the direct response alongside the

      deserialized response'
    defaultValue: 'False'
    types:
    - <xref:bool>
  - name: operation_config
    description: '*Operation configuration

      overrides*.'
    isRequired: true
  return:
    description: None or ClientRawResponse if raw=true
    types:
    - <xref:None>
    - <xref:msrest.pipeline.ClientRawResponse>
  exceptions:
  - type: azure.cognitiveservices.vision.contentmoderator.models.APIErrorException
attributes:
- uid: azure.cognitiveservices.vision.contentmoderator.operations.reviews_operations.ReviewsOperations.models
  name: models
  signature: models = <module 'azure.cognitiveservices.vision.contentmoderator.models'
    from 'C:\\hostedtoolcache\\windows\\Python\\3.11.9\\x64\\Lib\\site-packages\\azure\\cognitiveservices\\vision\\contentmoderator\\models\\__init__.py'>
