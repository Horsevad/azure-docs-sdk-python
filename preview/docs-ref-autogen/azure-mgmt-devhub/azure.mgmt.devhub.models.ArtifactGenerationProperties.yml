### YamlMime:PythonClass
uid: azure.mgmt.devhub.models.ArtifactGenerationProperties
name: ArtifactGenerationProperties
fullName: azure.mgmt.devhub.models.ArtifactGenerationProperties
module: azure.mgmt.devhub.models
inheritances:
- azure.mgmt.devhub._serialization.Model
summary: Properties used for generating artifacts such as Dockerfiles and manifests.
constructor:
  syntax: 'ArtifactGenerationProperties(*, generation_language: str | _models.GenerationLanguage
    | None = None, language_version: str | None = None, builder_version: str | None
    = None, port: str | None = None, app_name: str | None = None, dockerfile_output_directory:
    str | None = None, manifest_output_directory: str | None = None, dockerfile_generation_mode:
    str | _models.DockerfileGenerationMode | None = None, manifest_generation_mode:
    str | _models.ManifestGenerationMode | None = None, manifest_type: str | _models.GenerationManifestType
    | None = None, image_name: str | None = None, namespace: str | None = None, image_tag:
    str | None = None, **kwargs: Any)'
  parameters:
  - name: generation_language
    description: 'The programming language used. Known values are: "clojure",

      "csharp", "erlang", "go", "gomodule", "gradle", "java", "javascript", "php",
      "python", "ruby",

      "rust", and "swift".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devhub.models.GenerationLanguage>
  - name: language_version
    description: 'The version of the language image used for execution in the

      generated dockerfile.'
    types:
    - <xref:str>
  - name: builder_version
    description: 'The version of the language image used for building the code in
      the

      generated dockerfile.'
    types:
    - <xref:str>
  - name: port
    description: The port the application is exposed on.
    types:
    - <xref:str>
  - name: app_name
    description: The name of the app.
    types:
    - <xref:str>
  - name: dockerfile_output_directory
    description: The directory to output the generated Dockerfile to.
    types:
    - <xref:str>
  - name: manifest_output_directory
    description: The directory to output the generated manifests to.
    types:
    - <xref:str>
  - name: dockerfile_generation_mode
    description: 'The mode of generation to be used for generating

      Dockerfiles. Known values are: "enabled" and "disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devhub.models.DockerfileGenerationMode>
  - name: manifest_generation_mode
    description: 'The mode of generation to be used for generating Manifest.

      Known values are: "enabled" and "disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devhub.models.ManifestGenerationMode>
  - name: manifest_type
    description: 'Determines the type of manifests to be generated. Known values are:

      "helm" and "kube".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.devhub.models.GenerationManifestType>
  - name: image_name
    description: The name of the image to be generated.
    types:
    - <xref:str>
  - name: namespace
    description: The namespace to deploy the application to.
    types:
    - <xref:str>
  - name: image_tag
    description: The tag to apply to the generated image.
    types:
    - <xref:str>
variables:
- description: 'The programming language used. Known values are: "clojure",

    "csharp", "erlang", "go", "gomodule", "gradle", "java", "javascript", "php", "python",
    "ruby",

    "rust", and "swift".'
  name: generation_language
  types:
  - <xref:str>
  - <xref:azure.mgmt.devhub.models.GenerationLanguage>
- description: 'The version of the language image used for execution in the generated

    dockerfile.'
  name: language_version
  types:
  - <xref:str>
- description: 'The version of the language image used for building the code in the

    generated dockerfile.'
  name: builder_version
  types:
  - <xref:str>
- description: The port the application is exposed on.
  name: port
  types:
  - <xref:str>
- description: The name of the app.
  name: app_name
  types:
  - <xref:str>
- description: The directory to output the generated Dockerfile to.
  name: dockerfile_output_directory
  types:
  - <xref:str>
- description: The directory to output the generated manifests to.
  name: manifest_output_directory
  types:
  - <xref:str>
- description: 'The mode of generation to be used for generating Dockerfiles.

    Known values are: "enabled" and "disabled".'
  name: dockerfile_generation_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.devhub.models.DockerfileGenerationMode>
- description: 'The mode of generation to be used for generating Manifest.

    Known values are: "enabled" and "disabled".'
  name: manifest_generation_mode
  types:
  - <xref:str>
  - <xref:azure.mgmt.devhub.models.ManifestGenerationMode>
- description: 'Determines the type of manifests to be generated. Known values are:
    "helm"

    and "kube".'
  name: manifest_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.devhub.models.GenerationManifestType>
- description: The name of the image to be generated.
  name: image_name
  types:
  - <xref:str>
- description: The namespace to deploy the application to.
  name: namespace
  types:
  - <xref:str>
- description: The tag to apply to the generated image.
  name: image_tag
  types:
  - <xref:str>
methods:
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.devhub.models.ArtifactGenerationProperties.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
