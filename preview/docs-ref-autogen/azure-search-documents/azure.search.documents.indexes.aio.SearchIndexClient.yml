### YamlMime:PythonClass
uid: azure.search.documents.indexes.aio.SearchIndexClient
name: SearchIndexClient
fullName: azure.search.documents.indexes.aio.SearchIndexClient
module: azure.search.documents.indexes.aio
inheritances:
- azure.search.documents._headers_mixin.HeadersMixin
summary: A client to interact with Azure search service Indexes.
constructor:
  syntax: 'SearchIndexClient(endpoint: str, credential: AzureKeyCredential | AsyncTokenCredential,
    **kwargs)'
  parameters:
  - name: endpoint
    description: The URL endpoint of an Azure search service
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: A credential to authorize search client requests
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: api_version
    description: The Search API version to use for requests.
    types:
    - <xref:str>
  - name: audience
    description: 'sets the Audience to use for authentication with Azure Active Directory
      (AAD). The

      audience is not considered when using a shared key. If audience is not provided,
      the public cloud audience

      will be assumed.'
    types:
    - <xref:str>
methods:
- uid: azure.search.documents.indexes.aio.SearchIndexClient.analyze_text
  name: analyze_text
  summary: Shows how an analyzer breaks text into tokens.
  signature: 'async analyze_text(index_name: str, analyze_request: AnalyzeTextOptions,
    **kwargs: Any) -> AnalyzeResult'
  parameters:
  - name: index_name
    description: The name of the index for which to test an analyzer.
    isRequired: true
    types:
    - <xref:str>
  - name: analyze_request
    description: The text and analyzer or analysis components to test.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.AnalyzeTextOptions>
  return:
    description: AnalyzeResult
    types:
    - <xref:azure.search.documents.indexes.models.AnalyzeRequest>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.close
  name: close
  summary: Close the <xref:azure.search.documents.indexes.aio.SearchIndexClient> session.
  signature: async close() -> None
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_alias
  name: create_alias
  summary: 'Creates a new search alias.

    :param alias: The alias object.

    :type alias: ~azure.search.documents.indexes.models.SearchAlias

    :return: The alias created

    :rtype: ~azure.search.documents.indexes.models.SearchAlias

    :raises: ~azure.core.exceptions.HttpResponseError'
  signature: 'create_alias(alias: SearchIndex, **kwargs: Any) -> SearchAlias'
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_index
  name: create_index
  summary: Creates a new search index.
  signature: 'async create_index(index: SearchIndex, **kwargs: Any) -> SearchIndex'
  parameters:
  - name: index
    description: The index object.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  return:
    description: The index created
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_or_update_alias
  name: create_or_update_alias
  summary: Creates a new search alias or updates an alias if it already exists.
  signature: 'create_or_update_alias(alias: SearchAlias, *, match_condition: MatchConditions
    = MatchConditions.Unconditionally, **kwargs: Any) -> SearchAlias'
  parameters:
  - name: alias
    description: The definition of the alias to create or update.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchAlias>
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: The index created or updated
    types:
    - <xref:azure.search.documents.indexes.models.SearchAlias>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
  - type: azure.core.exceptions.ResourceModifiedError
  - type: azure.core.exceptions.ResourceNotModifiedError
  - type: azure.core.exceptions.ResourceNotFoundError
  - type: azure.core.exceptions.ResourceExistsError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_or_update_index
  name: create_or_update_index
  summary: Creates a new search index or updates an index if it already exists.
  signature: 'async create_or_update_index(index: SearchIndex, allow_index_downtime:
    bool | None = None, *, match_condition: MatchConditions = MatchConditions.Unconditionally,
    **kwargs: Any) -> SearchIndex'
  parameters:
  - name: index
    description: The index object.
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  - name: allow_index_downtime
    description: 'Allows new analyzers, tokenizers, token filters, or char filters

      to be added to an index by taking the index offline for at least a few seconds.
      This

      temporarily causes indexing and query requests to fail. Performance and write
      availability of

      the index can be impaired for several minutes after the index is updated, or
      longer for very

      large indexes.'
    isRequired: true
    types:
    - <xref:bool>
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: The index created or updated
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
  - type: azure.core.exceptions.ResourceModifiedError
  - type: azure.core.exceptions.ResourceNotModifiedError
  - type: azure.core.exceptions.ResourceNotFoundError
  - type: azure.core.exceptions.ResourceExistsError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_or_update_synonym_map
  name: create_or_update_synonym_map
  summary: 'Create a new Synonym Map in an Azure Search service, or update an

    existing one.'
  signature: 'async create_or_update_synonym_map(synonym_map: SynonymMap, *, match_condition:
    MatchConditions = MatchConditions.Unconditionally, **kwargs: Any) -> SynonymMap'
  parameters:
  - name: synonym_map
    description: The Synonym Map object
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SynonymMap>
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: The created or updated Synonym Map
    types:
    - <xref:azure.search.documents.indexes.models.SynonymMap>
- uid: azure.search.documents.indexes.aio.SearchIndexClient.create_synonym_map
  name: create_synonym_map
  summary: Create a new Synonym Map in an Azure Search service
  signature: 'async create_synonym_map(synonym_map: SynonymMap, **kwargs: Any) ->
    SynonymMap'
  parameters:
  - name: synonym_map
    description: The Synonym Map object
    isRequired: true
    types:
    - <xref:azure.search.documents.indexes.models.SynonymMap>
  return:
    description: The created Synonym Map
    types:
    - <xref:azure.search.documents.indexes.models.SynonymMap>
- uid: azure.search.documents.indexes.aio.SearchIndexClient.delete_alias
  name: delete_alias
  summary: 'Deletes a search alias and its associated mapping to an index.

    This operation is permanent, with no recovery option. The mapped index is untouched
    by this operation

    :param alias: The alias name or object to delete.

    :type alias: str or ~azure.search.documents.indexes.models.SearchAlias

    :keyword match_condition: The match condition to use upon the etag

    :paramtype match_condition: ~azure.core.MatchConditions

    :raises: ~azure.core.exceptions.HttpResponseError'
  signature: 'delete_alias(alias: str | SearchAlias, *, match_condition: MatchConditions
    = MatchConditions.Unconditionally, **kwargs: Any) -> None'
- uid: azure.search.documents.indexes.aio.SearchIndexClient.delete_index
  name: delete_index
  summary: 'Deletes a search index and all the documents it contains. The model must
    be

    provided instead of the name to use the access conditions'
  signature: 'async delete_index(index: str | SearchIndex, **kwargs: Any) -> None'
  parameters:
  - name: index
    description: The index name or object to delete.
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.delete_synonym_map
  name: delete_synonym_map
  summary: 'Delete a named Synonym Map in an Azure Search service. To use access conditions,

    the SynonymMap model must be provided instead of the name. It is enough to provide

    the name of the synonym map to delete unconditionally.'
  signature: 'async delete_synonym_map(synonym_map: str | SynonymMap, *, match_condition:
    MatchConditions = MatchConditions.Unconditionally, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The synonym map name or object to delete
    isRequired: true
    types:
    - <xref:str>
    - <xref:azure.search.documents.indexes.models.SynonymMap>
  - name: match_condition
    description: The match condition to use upon the etag
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_alias
  name: get_alias
  signature: 'get_alias(name: str, **kwargs) -> SearchAlias'
  parameters:
  - name: name
    description: The name of the alias to retrieve.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SearchAlias object
    types:
    - <xref:azure.search.documents.indexes.models.SearchAlias>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_index
  name: get_index
  signature: 'async get_index(name: str, **kwargs: Any) -> SearchIndex'
  parameters:
  - name: name
    description: The name of the index to retrieve.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: SearchIndex object
    types:
    - <xref:azure.search.documents.indexes.models.SearchIndex>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_index_statistics
  name: get_index_statistics
  summary: 'Returns statistics for the given index, including a document count

    and storage usage.'
  signature: 'async get_index_statistics(index_name: str, **kwargs: Any) -> Dict'
  parameters:
  - name: index_name
    description: The name of the index to retrieve.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Statistics for the given index, including a document count and storage
      usage.
    types:
    - <xref:Dict>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_search_client
  name: get_search_client
  summary: Return a client to perform operations on Search.
  signature: 'get_search_client(index_name: str, **kwargs: Any) -> SearchClient'
  parameters:
  - name: index_name
    description: The name of the Search Index
    isRequired: true
    types:
    - <xref:str>
  return:
    types:
    - <xref:azure.search.documents.aio.SearchClient>
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_service_statistics
  name: get_service_statistics
  summary: Get service level statistics for a search service.
  signature: async get_service_statistics(**kwargs) -> Dict
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_synonym_map
  name: get_synonym_map
  summary: Retrieve a named Synonym Map in an Azure Search service
  signature: 'async get_synonym_map(name: str, **kwargs: Any) -> SynonymMap'
  parameters:
  - name: name
    description: The name of the Synonym Map to get
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The retrieved Synonym Map
    types:
    - <xref:azure.search.documents.indexes.models.SynonymMap>
  exceptions:
  - type: azure.core.exceptions.ResourceNotFoundError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_synonym_map_names
  name: get_synonym_map_names
  summary: List the Synonym Map names in an Azure Search service.
  signature: 'async get_synonym_map_names(**kwargs: Any) -> List[str]'
  return:
    description: List of synonym map names
    types:
    - <xref:List>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.get_synonym_maps
  name: get_synonym_maps
  summary: List the Synonym Maps in an Azure Search service.
  signature: 'async get_synonym_maps(*, select: List[str] | None = None, **kwargs)
    -> List[SynonymMap]'
  parameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:List>[<xref:str>]
  return:
    description: List of synonym maps
    types:
    - <xref:List>[<xref:azure.search.documents.indexes.models.SynonymMap>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.list_alias_names
  name: list_alias_names
  summary: List the alias names in an Azure Search service.
  signature: list_alias_names(**kwargs) -> AsyncItemPaged[str]
  return:
    description: List of alias names
    types:
    - <xref:azure.core.paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.list_aliases
  name: list_aliases
  summary: List the aliases in an Azure Search service.
  signature: 'list_aliases(*, select: List[str] | None = None, **kwargs) -> AsyncItemPaged[SearchAlias]'
  parameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:List>[<xref:str>]
  return:
    description: List of Aliases
    types:
    - <xref:azure.core.paging.AsyncItemPaged>[<xref:azure.search.documents.indexes.models.SearchAlias>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.list_index_names
  name: list_index_names
  summary: List the index names in an Azure Search service.
  signature: 'list_index_names(**kwargs: Any) -> AsyncItemPaged[str]'
  return:
    description: List of index names
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:str>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.search.documents.indexes.aio.SearchIndexClient.list_indexes
  name: list_indexes
  summary: List the indexes in an Azure Search service.
  signature: 'list_indexes(*, select: List[str] | None = None, **kwargs) -> AsyncItemPaged[SearchIndex]'
  parameters:
  - name: select
    description: 'Selects which top-level properties of the skillsets to retrieve.
      Specified as a

      list of JSON property names, or ''*'' for all properties. The default is all

      properties.'
    types:
    - <xref:List>[<xref:str>]
  return:
    description: List of indexes
    types:
    - <xref:azure.core.async_paging.AsyncItemPaged>[<xref:azure.search.documents.indexes.models.SearchIndex>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
