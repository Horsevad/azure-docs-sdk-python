### YamlMime:PythonClass
uid: azure.ai.documentintelligence.models.DocumentParagraph
name: DocumentParagraph
fullName: azure.ai.documentintelligence.models.DocumentParagraph
module: azure.ai.documentintelligence.models
inheritances:
- azure.ai.documentintelligence._model_base.Model
summary: 'A paragraph object consisting with contiguous lines generally with common

  alignment and spacing.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'DocumentParagraph(*args: Any, **kwargs: Any)'
variables:
- description: 'Semantic role of the paragraph. Known values are: "pageHeader", "pageFooter",

    "pageNumber", "title", "sectionHeading", "footnote", and "formulaBlock".'
  name: role
  types:
  - <xref:str>
  - <xref:azure.ai.documentintelligence.models.ParagraphRole>
- description: Concatenated content of the paragraph in reading order. Required.
  name: content
  types:
  - <xref:str>
- description: Bounding regions covering the paragraph.
  name: bounding_regions
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.BoundingRegion>]
- description: Location of the paragraph in the reading order concatenated content.
    Required.
  name: spans
  types:
  - <xref:list>[<xref:azure.ai.documentintelligence.models.DocumentSpan>]
attributes:
- uid: azure.ai.documentintelligence.models.DocumentParagraph.bounding_regions
  name: bounding_regions
  summary: Bounding regions covering the paragraph.
  signature: 'bounding_regions: List[_models.BoundingRegion] | None'
- uid: azure.ai.documentintelligence.models.DocumentParagraph.content
  name: content
  summary: Concatenated content of the paragraph in reading order. Required.
  signature: 'content: str'
- uid: azure.ai.documentintelligence.models.DocumentParagraph.role
  name: role
  summary: '"pageHeader", "pageFooter",

    "pageNumber", "title", "sectionHeading", "footnote", and "formulaBlock".'
  signature: 'role: str | _models.ParagraphRole | None'
- uid: azure.ai.documentintelligence.models.DocumentParagraph.spans
  name: spans
  summary: Location of the paragraph in the reading order concatenated content. Required.
  signature: 'spans: List[_models.DocumentSpan]'
