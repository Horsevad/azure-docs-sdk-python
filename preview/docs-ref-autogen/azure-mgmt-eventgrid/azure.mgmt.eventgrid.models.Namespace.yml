### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.Namespace
name: Namespace
fullName: azure.mgmt.eventgrid.models.Namespace
module: azure.mgmt.eventgrid.models
inheritances:
- azure.mgmt.eventgrid.models._models_py3.TrackedResource
summary: 'Namespace resource.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'Namespace(*, location: str, tags: Dict[str, str] | None = None, sku: _models.NamespaceSku
    | None = None, identity: _models.IdentityInfo | None = None, private_endpoint_connections:
    List[_models.PrivateEndpointConnection] | None = None, topics_configuration: _models.TopicsConfiguration
    | None = None, topic_spaces_configuration: _models.TopicSpacesConfiguration |
    None = None, is_zone_redundant: bool | None = None, public_network_access: str
    | _models.PublicNetworkAccess | None = None, inbound_ip_rules: List[_models.InboundIpRule]
    | None = None, minimum_tls_version_allowed: str | _models.TlsVersion | None =
    None, **kwargs: Any)'
  parameters:
  - name: location
    description: Location of the resource. Required.
    types:
    - <xref:str>
  - name: tags
    description: Tags of the resource.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: sku
    description: Represents available Sku pricing tiers.
    types:
    - <xref:azure.mgmt.eventgrid.models.NamespaceSku>
  - name: identity
    description: Identity information for the Namespace resource.
    types:
    - <xref:azure.mgmt.eventgrid.models.IdentityInfo>
  - name: private_endpoint_connections
    types:
    - <xref:azure.mgmt.eventgrid.aio.operations.DomainEventSubscriptionsOperations.list>[<xref:azure.mgmt.eventgrid.models.PrivateEndpointConnection>]
  - name: topics_configuration
    description: Topics configuration information for the namespace resource.
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicsConfiguration>
  - name: topic_spaces_configuration
    description: 'Topic spaces configuration information for the namespace

      resource.'
    types:
    - <xref:azure.mgmt.eventgrid.models.TopicSpacesConfiguration>
  - name: is_zone_redundant
    description: 'Allows the user to specify if the service is zone-redundant. This

      is a required property and user needs to specify this value explicitly.

      Once specified, this property cannot be updated.'
    types:
    - <xref:bool>
  - name: public_network_access
    description: 'This determines if traffic is allowed over public network. By

      default it is enabled.

      You can further restrict to specific IPs by configuring `<seealso

      cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules"

      />`. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.PublicNetworkAccess>
  - name: inbound_ip_rules
    description: 'This can be used to restrict traffic from specific IPs instead of

      all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
    types:
    - <xref:azure.mgmt.eventgrid.aio.operations.DomainEventSubscriptionsOperations.list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
  - name: minimum_tls_version_allowed
    description: 'Minimum TLS version of the publisher allowed to publish

      to this namespace. Only TLS version 1.2 is supported. Known values are: "1.0",
      "1.1", and

      "1.2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.TlsVersion>
variables:
- description: Fully qualified identifier of the resource.
  name: id
  types:
  - <xref:str>
- description: Name of the resource.
  name: name
  types:
  - <xref:str>
- description: Type of the resource.
  name: type
  types:
  - <xref:str>
- description: Location of the resource. Required.
  name: location
  types:
  - <xref:str>
- description: Tags of the resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Represents available Sku pricing tiers.
  name: sku
  types:
  - <xref:azure.mgmt.eventgrid.models.NamespaceSku>
- description: Identity information for the Namespace resource.
  name: identity
  types:
  - <xref:azure.mgmt.eventgrid.models.IdentityInfo>
- description: The system metadata relating to the namespace resource.
  name: system_data
  types:
  - <xref:azure.mgmt.eventgrid.models.SystemData>
- name: private_endpoint_connections
  types:
  - <xref:list>[<xref:azure.mgmt.eventgrid.models.PrivateEndpointConnection>]
- description: 'Provisioning state of the namespace resource. Known values are:

    "Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed", "Deleted",

    "DeleteFailed", "CreateFailed", and "UpdatedFailed".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.NamespaceProvisioningState>
- description: Topics configuration information for the namespace resource.
  name: topics_configuration
  types:
  - <xref:azure.mgmt.eventgrid.models.TopicsConfiguration>
- description: 'Topic spaces configuration information for the namespace

    resource.'
  name: topic_spaces_configuration
  types:
  - <xref:azure.mgmt.eventgrid.models.TopicSpacesConfiguration>
- description: 'Allows the user to specify if the service is zone-redundant. This
    is a

    required property and user needs to specify this value explicitly.

    Once specified, this property cannot be updated.'
  name: is_zone_redundant
  types:
  - <xref:bool>
- description: 'This determines if traffic is allowed over public network. By

    default it is enabled.

    You can further restrict to specific IPs by configuring `<seealso

    cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules"

    />`. Known values are: "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.PublicNetworkAccess>
- description: 'This can be used to restrict traffic from specific IPs instead of
    all

    IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
  name: inbound_ip_rules
  types:
  - <xref:list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
- description: 'Minimum TLS version of the publisher allowed to publish to

    this namespace. Only TLS version 1.2 is supported. Known values are: "1.0", "1.1",
    and "1.2".'
  name: minimum_tls_version_allowed
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.TlsVersion>
methods:
- uid: azure.mgmt.eventgrid.models.Namespace.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.Namespace.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.Namespace.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.eventgrid.models.Namespace.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.Namespace.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.eventgrid.models.Namespace.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
