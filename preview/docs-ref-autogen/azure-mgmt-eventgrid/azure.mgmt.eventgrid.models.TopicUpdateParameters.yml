### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.TopicUpdateParameters
name: TopicUpdateParameters
fullName: azure.mgmt.eventgrid.models.TopicUpdateParameters
module: azure.mgmt.eventgrid.models
inheritances:
- azure.mgmt.eventgrid._serialization.Model
summary: Properties of the Topic update.
constructor:
  syntax: 'TopicUpdateParameters(*, tags: Dict[str, str] | None = None, identity:
    _models.IdentityInfo | None = None, sku: _models.ResourceSku | None = None, public_network_access:
    str | _models.PublicNetworkAccess | None = None, inbound_ip_rules: List[_models.InboundIpRule]
    | None = None, minimum_tls_version_allowed: str | _models.TlsVersion | None =
    None, disable_local_auth: bool | None = None, data_residency_boundary: str | _models.DataResidencyBoundary
    | None = None, event_type_info: _models.EventTypeInfo | None = None, **kwargs:
    Any)'
  parameters:
  - name: tags
    description: Tags of the Topic resource.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: identity
    description: Topic resource identity information.
    types:
    - <xref:azure.mgmt.eventgrid.models.IdentityInfo>
  - name: sku
    description: The Sku pricing tier for the topic.
    types:
    - <xref:azure.mgmt.eventgrid.models.ResourceSku>
  - name: public_network_access
    description: 'This determines if traffic is allowed over public network. By

      default it is enabled.

      You can further restrict to specific IPs by configuring `<seealso

      cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules"

      />`. Known values are: "Enabled" and "Disabled".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.PublicNetworkAccess>
  - name: inbound_ip_rules
    description: 'This can be used to restrict traffic from specific IPs instead of

      all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
    types:
    - <xref:azure.mgmt.eventgrid.aio.operations.DomainEventSubscriptionsOperations.list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
  - name: minimum_tls_version_allowed
    description: 'Minimum TLS version of the publisher allowed to publish

      to this domain. Known values are: "1.0", "1.1", and "1.2".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.TlsVersion>
  - name: disable_local_auth
    description: 'This boolean is used to enable or disable local auth. Default

      value is false. When the property is set to true, only AAD token will be used
      to authenticate

      if user is allowed to publish to the topic.'
    types:
    - <xref:bool>
  - name: data_residency_boundary
    description: 'The data residency boundary for the topic. Known values are:

      "WithinGeopair" and "WithinRegion".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.eventgrid.models.DataResidencyBoundary>
  - name: event_type_info
    description: The eventTypeInfo for the topic.
    types:
    - <xref:azure.mgmt.eventgrid.models.EventTypeInfo>
variables:
- description: Tags of the Topic resource.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Topic resource identity information.
  name: identity
  types:
  - <xref:azure.mgmt.eventgrid.models.IdentityInfo>
- description: The Sku pricing tier for the topic.
  name: sku
  types:
  - <xref:azure.mgmt.eventgrid.models.ResourceSku>
- description: 'This determines if traffic is allowed over public network. By

    default it is enabled.

    You can further restrict to specific IPs by configuring `<seealso

    cref="P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules"

    />`. Known values are: "Enabled" and "Disabled".'
  name: public_network_access
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.PublicNetworkAccess>
- description: 'This can be used to restrict traffic from specific IPs instead of
    all

    IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
  name: inbound_ip_rules
  types:
  - <xref:list>[<xref:azure.mgmt.eventgrid.models.InboundIpRule>]
- description: 'Minimum TLS version of the publisher allowed to publish to

    this domain. Known values are: "1.0", "1.1", and "1.2".'
  name: minimum_tls_version_allowed
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.TlsVersion>
- description: 'This boolean is used to enable or disable local auth. Default value

    is false. When the property is set to true, only AAD token will be used to authenticate
    if user

    is allowed to publish to the topic.'
  name: disable_local_auth
  types:
  - <xref:bool>
- description: 'The data residency boundary for the topic. Known values are:

    "WithinGeopair" and "WithinRegion".'
  name: data_residency_boundary
  types:
  - <xref:str>
  - <xref:azure.mgmt.eventgrid.models.DataResidencyBoundary>
- description: The eventTypeInfo for the topic.
  name: event_type_info
  types:
  - <xref:azure.mgmt.eventgrid.models.EventTypeInfo>
methods:
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.eventgrid.models.TopicUpdateParameters.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
