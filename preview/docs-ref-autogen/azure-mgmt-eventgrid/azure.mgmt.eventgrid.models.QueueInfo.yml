### YamlMime:PythonClass
uid: azure.mgmt.eventgrid.models.QueueInfo
name: QueueInfo
fullName: azure.mgmt.eventgrid.models.QueueInfo
module: azure.mgmt.eventgrid.models
inheritances:
- azure.mgmt.eventgrid._serialization.Model
summary: Properties of the Queue info for event subscription.
constructor:
  syntax: 'QueueInfo(*, receive_lock_duration_in_seconds: int | None = None, max_delivery_count:
    int | None = None, dead_letter_destination_with_resource_identity: _models.DeadLetterWithResourceIdentity
    | None = None, event_time_to_live: timedelta | None = None, **kwargs: Any)'
  parameters:
  - name: receive_lock_duration_in_seconds
    description: 'Maximum period in seconds in which once the message

      is in received (by the client) state and waiting to be accepted, released or
      rejected.

      If this time elapsed after a message has been received by the client and not
      transitioned into

      accepted (not processed), released or rejected,

      the message is available for redelivery. This is an optional field, where default
      is 60

      seconds, minimum is 60 seconds and maximum is 300 seconds.'
    types:
    - <xref:int>
  - name: max_delivery_count
    description: The maximum delivery count of the events.
    types:
    - <xref:int>
  - name: dead_letter_destination_with_resource_identity
    description: 'The dead letter destination of the

      event subscription. Any event that cannot be delivered to its'' destination
      is sent to the dead

      letter destination.

      Uses the managed identity setup on the parent resource (namely, topic) to acquire
      the

      authentication tokens being used during delivery / dead-lettering.'
    types:
    - <xref:azure.mgmt.eventgrid.models.DeadLetterWithResourceIdentity>
  - name: event_time_to_live
    description: "Time span duration in ISO 8601 format that determines how long\n\
      messages are available to the subscription from the time the message was published.\n\
      This duration value is expressed using the following format: 'P(n)Y(n)M(n)DT(n)H(n)M(n)S',\n\
      where:\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
      dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false,\
      \ \"language\": \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\
      \n````default\n\n   - (n) is replaced by the value of each time element that\
      \ follows the (n).\n   - P is the duration (or Period) designator and is always\
      \ placed at the beginning of the\n   ````\n\nduration.\n   * Y is the year designator,\
      \ and it follows the value for the number of years. \n\n   * M is the month\
      \ designator, and it follows the value for the number of months. \n\n   * W\
      \ is the week designator, and it follows the value for the number of weeks.\
      \ \n\n   * D is the day designator, and it follows the value for the number\
      \ of days. \n\n   * T is the time designator, and it precedes the time components.\
      \ \n\n   * H is the hour designator, and it follows the value for the number\
      \ of hours. \n\n   * M is the minute designator, and it follows the value for\
      \ the number of minutes. \n\n   * S is the second designator, and it follows\
      \ the value for the number of seconds. \n\nThis duration value cannot be set\
      \ greater than the topic's EventRetentionInDays. It is is an\noptional field\
      \ where its minimum value is 1 minute, and its maximum is determined\nby topic's\
      \ EventRetentionInDays value. The followings are examples of valid values:\n\
      \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
      : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
      : \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\
      \n   - 'P0DT23H12M' or 'PT23H12M': for duration of 23 hours and 12 minutes.\n\
      \   - 'P1D' or 'P1DT0H0M0S': for duration of 1 day.\n   ````"
    types:
    - <xref:datetime.timedelta>
variables:
- description: 'Maximum period in seconds in which once the message is

    in received (by the client) state and waiting to be accepted, released or rejected.

    If this time elapsed after a message has been received by the client and not transitioned
    into

    accepted (not processed), released or rejected,

    the message is available for redelivery. This is an optional field, where default
    is 60

    seconds, minimum is 60 seconds and maximum is 300 seconds.'
  name: receive_lock_duration_in_seconds
  types:
  - <xref:int>
- description: The maximum delivery count of the events.
  name: max_delivery_count
  types:
  - <xref:int>
- description: 'The dead letter destination of the event

    subscription. Any event that cannot be delivered to its'' destination is sent
    to the dead letter

    destination.

    Uses the managed identity setup on the parent resource (namely, topic) to acquire
    the

    authentication tokens being used during delivery / dead-lettering.'
  name: dead_letter_destination_with_resource_identity
  types:
  - <xref:azure.mgmt.eventgrid.models.DeadLetterWithResourceIdentity>
- description: "Time span duration in ISO 8601 format that determines how long\nmessages\
    \ are available to the subscription from the time the message was published.\n\
    This duration value is expressed using the following format: 'P(n)Y(n)M(n)DT(n)H(n)M(n)S',\n\
    where:\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false,\
    \ \"language\": \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\
    \n````default\n\n   - (n) is replaced by the value of each time element that follows\
    \ the (n).\n   - P is the duration (or Period) designator and is always placed\
    \ at the beginning of the\n   ````\n\nduration.\n   * Y is the year designator,\
    \ and it follows the value for the number of years. \n\n   * M is the month designator,\
    \ and it follows the value for the number of months. \n\n   * W is the week designator,\
    \ and it follows the value for the number of weeks. \n\n   * D is the day designator,\
    \ and it follows the value for the number of days. \n\n   * T is the time designator,\
    \ and it precedes the time components. \n\n   * H is the hour designator, and\
    \ it follows the value for the number of hours. \n\n   * M is the minute designator,\
    \ and it follows the value for the number of minutes. \n\n   * S is the second\
    \ designator, and it follows the value for the number of seconds. \n\nThis duration\
    \ value cannot be set greater than the topic's EventRetentionInDays. It is is\
    \ an\noptional field where its minimum value is 1 minute, and its maximum is determined\n\
    by topic's EventRetentionInDays value. The followings are examples of valid values:\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"default\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````default\n\
    \n   - 'P0DT23H12M' or 'PT23H12M': for duration of 23 hours and 12 minutes.\n\
    \   - 'P1D' or 'P1DT0H0M0S': for duration of 1 day.\n   ````"
  name: event_time_to_live
  types:
  - <xref:datetime.timedelta>
methods:
- uid: azure.mgmt.eventgrid.models.QueueInfo.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.eventgrid.models.QueueInfo.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.QueueInfo.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.eventgrid.models.QueueInfo.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.eventgrid.models.QueueInfo.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.eventgrid.models.QueueInfo.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
