### YamlMime:PythonClass
uid: azure.ai.inference.models.AssistantMessage
name: AssistantMessage
fullName: azure.ai.inference.models.AssistantMessage
module: azure.ai.inference.models
summary: A request chat message representing response or action from the assistant.
constructor:
  syntax: 'AssistantMessage(*args: Any, **kwargs: Any)'
variables:
- description: 'The chat role associated with this message, which is always ''assistant''
    for

    assistant messages. Required. The role that provides responses to system-instructed,

    user-prompted input.'
  name: role
  types:
  - <xref:str>
  - <xref:azure.ai.inference.models.ASSISTANT>
- description: The content of the message.
  name: content
  types:
  - <xref:str>
- description: 'The tool calls that must be resolved and have their outputs appended
    to

    subsequent input messages for the chat

    completions request to resolve as configured.'
  name: tool_calls
  types:
  - <xref:list>[<xref:azure.ai.inference.models.ChatCompletionsToolCall>]
methods:
- uid: azure.ai.inference.models.AssistantMessage.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.inference.models.AssistantMessage.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.inference.models.AssistantMessage.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.inference.models.AssistantMessage.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.inference.models.AssistantMessage.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.inference.models.AssistantMessage.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.inference.models.AssistantMessage.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.AssistantMessage.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.inference.models.AssistantMessage.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.AssistantMessage.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.inference.models.AssistantMessage.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.inference.models.AssistantMessage.content
  name: content
  summary: The content of the message.
  signature: 'content: str | None'
- uid: azure.ai.inference.models.AssistantMessage.role
  name: role
  summary: 'The chat role associated with this message, which is always ''assistant''
    for assistant messages.

    Required. The role that provides responses to system-instructed, user-prompted
    input.'
  signature: 'role: ASSISTANT: ''assistant''>]'
- uid: azure.ai.inference.models.AssistantMessage.tool_calls
  name: tool_calls
  summary: 'The tool calls that must be resolved and have their outputs appended to
    subsequent input

    messages for the chat

    completions request to resolve as configured.'
  signature: 'tool_calls: List[_models.ChatCompletionsToolCall] | None'
