### YamlMime:PythonClass
uid: azure.ai.inference.models.JsonSchemaFormat
name: JsonSchemaFormat
fullName: azure.ai.inference.models.JsonSchemaFormat
module: azure.ai.inference.models
summary: 'Defines the response format for chat completions as JSON with a given schema.

  The AI model will need to adhere to this schema when generating completions.'
constructor:
  syntax: 'JsonSchemaFormat(*args: Any, **kwargs: Any)'
variables:
- description: 'A name that labels this JSON schema. Must be a-z, A-Z, 0-9, or contain
    underscores

    and dashes, with a maximum length of 64. Required.'
  name: name
  types:
  - <xref:str>
- description: 'The definition of the JSON schema. See

    [https://json-schema.org/overview/what-is-jsonschema](https://json-schema.org/overview/what-is-jsonschema).

    Note that AI models usually only support a subset of the keywords defined by JSON
    schema.

    Consult your AI model documentation to determine what is supported. Required.'
  name: schema
  types:
  - <xref:dict>[<xref:str>, <xref:any>]
- description: 'A description of the response format, used by the AI model to determine
    how

    to generate responses in this format.'
  name: description
  types:
  - <xref:str>
- description: 'If set to true, the service will error out if the provided JSON schema
    contains

    keywords

    not supported by the AI model. An example of such keyword may be `maxLength` for
    JSON type

    `string`.

    If false, and the provided JSON schema contains keywords not supported by the
    AI model,

    the AI model will not error out. Instead it will ignore the unsupported keywords.'
  name: strict
  types:
  - <xref:bool>
methods:
- uid: azure.ai.inference.models.JsonSchemaFormat.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.inference.models.JsonSchemaFormat.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.inference.models.JsonSchemaFormat.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.inference.models.JsonSchemaFormat.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.inference.models.JsonSchemaFormat.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.inference.models.JsonSchemaFormat.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.inference.models.JsonSchemaFormat.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.JsonSchemaFormat.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.inference.models.JsonSchemaFormat.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.inference.models.JsonSchemaFormat.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.inference.models.JsonSchemaFormat.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.inference.models.JsonSchemaFormat.description
  name: description
  summary: 'A description of the response format, used by the AI model to determine
    how to generate

    responses in this format.'
  signature: 'description: str | None'
- uid: azure.ai.inference.models.JsonSchemaFormat.name
  name: name
  summary: 'A name that labels this JSON schema. Must be a-z, A-Z, 0-9, or contain
    underscores and dashes,

    with a maximum length of 64. Required.'
  signature: 'name: str'
- uid: azure.ai.inference.models.JsonSchemaFormat.schema
  name: schema
  summary: '//json-schema.org/overview/what-is-jsonschema.

    Note that AI models usually only support a subset of the keywords defined by JSON
    schema.

    Consult your AI model documentation to determine what is supported. Required.'
  signature: 'schema: Dict[str, Any]'
- uid: azure.ai.inference.models.JsonSchemaFormat.strict
  name: strict
  summary: 'If set to true, the service will error out if the provided JSON schema
    contains keywords

    not supported by the AI model. An example of such keyword may be `maxLength` for
    JSON type

    `string`.

    If false, and the provided JSON schema contains keywords not supported by the
    AI model,

    the AI model will not error out. Instead it will ignore the unsupported keywords.'
  signature: 'strict: bool | None'
