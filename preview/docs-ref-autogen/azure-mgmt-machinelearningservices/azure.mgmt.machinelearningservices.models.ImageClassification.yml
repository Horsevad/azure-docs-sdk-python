### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.ImageClassification
name: ImageClassification
fullName: azure.mgmt.machinelearningservices.models.ImageClassification
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices.models._models_py3.ImageClassificationBase
- azure.mgmt.machinelearningservices.models._models_py3.AutoMLVertical
summary: 'Image Classification. Multi-class image classification is used when an image
  is classified with

  only a single label

  from a set of classes - e.g. each image is classified as either an image of a ''cat''
  or a ''dog''

  or a ''duck''.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'ImageClassification(*, training_data: _models.MLTableJobInput, limit_settings:
    _models.ImageLimitSettings, log_verbosity: str | _models.LogVerbosity | None =
    None, target_column_name: str | None = None, sweep_settings: _models.ImageSweepSettings
    | None = None, validation_data: _models.MLTableJobInput | None = None, validation_data_size:
    float | None = None, model_settings: _models.ImageModelSettingsClassification
    | None = None, search_space: List[_models.ImageModelDistributionSettingsClassification]
    | None = None, primary_metric: str | _models.ClassificationPrimaryMetrics | None
    = None, **kwargs: Any)'
  parameters:
  - name: log_verbosity
    description: 'Log verbosity for the job. Known values are: "NotSet", "Debug",
      "Info",

      "Warning", "Error", and "Critical".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.LogVerbosity>
  - name: target_column_name
    description: 'Target column name: This is prediction values column.

      Also known as label column name in context of classification tasks.'
    types:
    - <xref:str>
  - name: training_data
    description: '[Required] Training data input. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
  - name: limit_settings
    description: '[Required] Limit settings for the AutoML job. Required.'
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageLimitSettings>
  - name: sweep_settings
    description: Model sweeping and hyperparameter sweeping related settings.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageSweepSettings>
  - name: validation_data
    description: Validation data inputs.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
  - name: validation_data_size
    description: 'The fraction of training dataset that needs to be set aside for

      validation purpose.

      Values between (0.0 , 1.0)

      Applied when validation dataset is not provided.'
    types:
    - <xref:float>
  - name: model_settings
    description: Settings used for training the model.
    types:
    - <xref:azure.mgmt.machinelearningservices.models.ImageModelSettingsClassification>
  - name: search_space
    description: 'Search space for sampling different combinations of models and their

      hyperparameters.'
    types:
    - <xref:azure.mgmt.machinelearningservices.aio.operations.BatchDeploymentsOperations.list>[<xref:azure.mgmt.machinelearningservices.models.ImageModelDistributionSettingsClassification>]
  - name: primary_metric
    description: 'Primary metric to optimize for this task. Known values are:

      "AUCWeighted", "Accuracy", "NormMacroRecall", "AveragePrecisionScoreWeighted",
      and

      "PrecisionScoreWeighted".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.machinelearningservices.models.ClassificationPrimaryMetrics>
variables:
- description: 'Log verbosity for the job. Known values are: "NotSet", "Debug", "Info",

    "Warning", "Error", and "Critical".'
  name: log_verbosity
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.LogVerbosity>
- description: 'Target column name: This is prediction values column.

    Also known as label column name in context of classification tasks.'
  name: target_column_name
  types:
  - <xref:str>
- description: '[Required] Task type for AutoMLJob. Required. Known values are:

    "Classification", "Regression", "Forecasting", "ImageClassification",

    "ImageClassificationMultilabel", "ImageObjectDetection", "ImageInstanceSegmentation",

    "TextClassification", "TextClassificationMultilabel", and "TextNER".'
  name: task_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.TaskType>
- description: '[Required] Training data input. Required.'
  name: training_data
  types:
  - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
- description: '[Required] Limit settings for the AutoML job. Required.'
  name: limit_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.ImageLimitSettings>
- description: Model sweeping and hyperparameter sweeping related settings.
  name: sweep_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.ImageSweepSettings>
- description: Validation data inputs.
  name: validation_data
  types:
  - <xref:azure.mgmt.machinelearningservices.models.MLTableJobInput>
- description: 'The fraction of training dataset that needs to be set aside for

    validation purpose.

    Values between (0.0 , 1.0)

    Applied when validation dataset is not provided.'
  name: validation_data_size
  types:
  - <xref:float>
- description: Settings used for training the model.
  name: model_settings
  types:
  - <xref:azure.mgmt.machinelearningservices.models.ImageModelSettingsClassification>
- description: 'Search space for sampling different combinations of models and their

    hyperparameters.'
  name: search_space
  types:
  - <xref:list>[<xref:azure.mgmt.machinelearningservices.models.ImageModelDistributionSettingsClassification>]
- description: 'Primary metric to optimize for this task. Known values are:

    "AUCWeighted", "Accuracy", "NormMacroRecall", "AveragePrecisionScoreWeighted",
    and

    "PrecisionScoreWeighted".'
  name: primary_metric
  types:
  - <xref:str>
  - <xref:azure.mgmt.machinelearningservices.models.ClassificationPrimaryMetrics>
methods:
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.machinelearningservices.models.ImageClassification.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
