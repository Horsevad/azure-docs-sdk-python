### YamlMime:PythonClass
uid: azure.ai.projects.models.VectorStoreFileCount
name: VectorStoreFileCount
fullName: azure.ai.projects.models.VectorStoreFileCount
module: azure.ai.projects.models
summary: Counts of files processed or being processed by this vector store grouped
  by status.
constructor:
  syntax: 'VectorStoreFileCount(*args: Any, **kwargs: Any)'
variables:
- description: The number of files that are currently being processed. Required.
  name: in_progress
  types:
  - <xref:int>
- description: The number of files that have been successfully processed. Required.
  name: completed
  types:
  - <xref:int>
- description: The number of files that have failed to process. Required.
  name: failed
  types:
  - <xref:int>
- description: The number of files that were cancelled. Required.
  name: cancelled
  types:
  - <xref:int>
- description: The total number of files. Required.
  name: total
  types:
  - <xref:int>
methods:
- uid: azure.ai.projects.models.VectorStoreFileCount.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.VectorStoreFileCount.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.projects.models.VectorStoreFileCount.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.VectorStoreFileCount.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.VectorStoreFileCount.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.projects.models.VectorStoreFileCount.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.projects.models.VectorStoreFileCount.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.VectorStoreFileCount.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.VectorStoreFileCount.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.VectorStoreFileCount.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.VectorStoreFileCount.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.projects.models.VectorStoreFileCount.cancelled
  name: cancelled
  summary: The number of files that were cancelled. Required.
  signature: 'cancelled: int'
- uid: azure.ai.projects.models.VectorStoreFileCount.completed
  name: completed
  summary: The number of files that have been successfully processed. Required.
  signature: 'completed: int'
- uid: azure.ai.projects.models.VectorStoreFileCount.failed
  name: failed
  summary: The number of files that have failed to process. Required.
  signature: 'failed: int'
- uid: azure.ai.projects.models.VectorStoreFileCount.in_progress
  name: in_progress
  summary: The number of files that are currently being processed. Required.
  signature: 'in_progress: int'
- uid: azure.ai.projects.models.VectorStoreFileCount.total
  name: total
  summary: The total number of files. Required.
  signature: 'total: int'
