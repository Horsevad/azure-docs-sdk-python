### YamlMime:PythonClass
uid: azure.ai.projects.models.AgentThreadCreationOptions
name: AgentThreadCreationOptions
fullName: azure.ai.projects.models.AgentThreadCreationOptions
module: azure.ai.projects.models
summary: The details used to create a new agent thread.
constructor:
  syntax: 'AgentThreadCreationOptions(*args: Any, **kwargs: Any)'
variables:
- description: The initial messages to associate with the new thread.
  name: messages
  types:
  - <xref:list>[<xref:azure.ai.projects.models.ThreadMessageOptions>]
- description: 'A set of resources that are made available to the agent''s tools in
    this

    thread. The resources are specific to the

    type of tool. For example, the `code_interpreter` tool requires a list of file
    IDs, while

    the `file_search` tool requires

    a list of vector store IDs.'
  name: tool_resources
  types:
  - <xref:azure.ai.projects.models.ToolResources>
- description: 'A set of up to 16 key/value pairs that can be attached to an object,
    used for

    storing additional information about that object in a structured format. Keys
    may be up to 64

    characters in length and values may be up to 512 characters in length.'
  name: metadata
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.projects.models.AgentThreadCreationOptions.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.AgentThreadCreationOptions.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.projects.models.AgentThreadCreationOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.AgentThreadCreationOptions.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.AgentThreadCreationOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.projects.models.AgentThreadCreationOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.projects.models.AgentThreadCreationOptions.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.AgentThreadCreationOptions.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.AgentThreadCreationOptions.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.AgentThreadCreationOptions.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.AgentThreadCreationOptions.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.projects.models.AgentThreadCreationOptions.messages
  name: messages
  summary: The initial messages to associate with the new thread.
  signature: 'messages: List[_models.ThreadMessageOptions] | None'
- uid: azure.ai.projects.models.AgentThreadCreationOptions.metadata
  name: metadata
  summary: 'A set of up to 16 key/value pairs that can be attached to an object, used
    for storing

    additional information about that object in a structured format. Keys may be up
    to 64

    characters in length and values may be up to 512 characters in length.'
  signature: 'metadata: Dict[str, str] | None'
- uid: azure.ai.projects.models.AgentThreadCreationOptions.tool_resources
  name: tool_resources
  summary: 'A set of resources that are made available to the agent''s tools in this
    thread. The resources

    are specific to the

    type of tool. For example, the `code_interpreter` tool requires a list of file
    IDs, while the

    `file_search` tool requires

    a list of vector store IDs.'
  signature: 'tool_resources: _models.ToolResources | None'
