### YamlMime:PythonClass
uid: azure.ai.projects.models.ThreadMessageOptions
name: ThreadMessageOptions
fullName: azure.ai.projects.models.ThreadMessageOptions
module: azure.ai.projects.models
summary: 'A single message within an agent thread, as provided during that thread''s
  creation for its

  initial state.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'ThreadMessageOptions(*args: Any, **kwargs: Any)'
variables:
- description: "The role of the entity that is creating the message. Allowed values\
    \ include:\n\n* `user`: Indicates the message is sent by an actual user and should\
    \ be used in most cases to represent user-generated messages. \n\n* `assistant`:\
    \ Indicates the message is generated by the agent. Use this value to insert messages\
    \ from the agent into the conversation. Required. Known values are: \"user\" and\
    \ \"assistant\"."
  name: role
  types:
  - <xref:str>
  - <xref:azure.ai.projects.models.MessageRole>
- description: 'The textual content of the initial message. Currently, robust input
    including

    images and annotated text may only be provided via

    a separate call to the create message API. Required.'
  name: content
  types:
  - <xref:str>
- description: 'A list of files attached to the message, and the tools they should
    be added

    to.'
  name: attachments
  types:
  - <xref:list>[<xref:azure.ai.projects.models.MessageAttachment>]
- description: 'A set of up to 16 key/value pairs that can be attached to an object,
    used for

    storing additional information about that object in a structured format. Keys
    may be up to 64

    characters in length and values may be up to 512 characters in length.'
  name: metadata
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.projects.models.ThreadMessageOptions.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.ThreadMessageOptions.clear
  name: clear
  signature: clear() -> None
- uid: azure.ai.projects.models.ThreadMessageOptions.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.ThreadMessageOptions.get
  name: get
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.ThreadMessageOptions.items
  name: items
  signature: items() -> ItemsView[str, Any]
- uid: azure.ai.projects.models.ThreadMessageOptions.keys
  name: keys
  signature: keys() -> KeysView[str]
- uid: azure.ai.projects.models.ThreadMessageOptions.pop
  name: pop
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.ThreadMessageOptions.popitem
  name: popitem
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.ThreadMessageOptions.setdefault
  name: setdefault
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.ThreadMessageOptions.update
  name: update
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.ThreadMessageOptions.values
  name: values
  signature: values() -> ValuesView[Any]
attributes:
- uid: azure.ai.projects.models.ThreadMessageOptions.attachments
  name: attachments
  summary: A list of files attached to the message, and the tools they should be added
    to.
  signature: 'attachments: List[_models.MessageAttachment] | None'
- uid: azure.ai.projects.models.ThreadMessageOptions.content
  name: content
  summary: 'The textual content of the initial message. Currently, robust input including
    images and

    annotated text may only be provided via

    a separate call to the create message API. Required.'
  signature: 'content: str'
- uid: azure.ai.projects.models.ThreadMessageOptions.metadata
  name: metadata
  summary: 'A set of up to 16 key/value pairs that can be attached to an object, used
    for storing

    additional information about that object in a structured format. Keys may be up
    to 64

    characters in length and values may be up to 512 characters in length.'
  signature: 'metadata: Dict[str, str] | None'
- uid: azure.ai.projects.models.ThreadMessageOptions.role
  name: role
  summary: "The role of the entity that is creating the message. Allowed values include:\n\
    \n* `user`: Indicates the message is sent by an actual user and should be used\
    \ in most cases to represent user-generated messages. \n\n* `assistant`: Indicates\
    \ the message is generated by the agent. Use this value to insert messages from\
    \ the agent into the conversation. Required. Known values are: \"user\" and \"\
    assistant\". "
  signature: 'role: str | _models.MessageRole'
