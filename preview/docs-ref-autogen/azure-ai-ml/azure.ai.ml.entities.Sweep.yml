### YamlMime:PythonClass
uid: azure.ai.ml.entities.Sweep
name: Sweep
fullName: azure.ai.ml.entities.Sweep
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._job.sweep.parameterized_sweep.ParameterizedSweep
- azure.ai.ml.entities._builders.base_node.BaseNode
summary: 'Base class for sweep node.


  This class should not be instantiated directly. Instead, it should be created via
  the builder function: sweep.'
constructor:
  syntax: 'Sweep(*, trial: CommandComponent | str | None = None, compute: str | None
    = None, limits: SweepJobLimits | None = None, sampling_algorithm: str | SamplingAlgorithm
    | None = None, objective: Objective | None = None, early_termination: BanditPolicy
    | MedianStoppingPolicy | TruncationSelectionPolicy | None = None, search_space:
    Dict[str, Choice | LogNormal | LogUniform | Normal | QLogNormal | QLogUniform
    | QNormal | QUniform | Randint | Uniform] | None = None, inputs: Dict[str, int
    | str | float | bool | Input] | None = None, outputs: Dict[str, str | Output]
    | None = None, identity: ManagedIdentityConfiguration | AmlTokenConfiguration
    | UserIdentityConfiguration | None = None, queue_settings: QueueSettings | None
    = None, **kwargs)'
  parameters:
  - name: trial
    description: The ID or instance of the command component or job to be run for
      the step.
    isRequired: true
    types:
    - <xref:Union>[<xref:azure.ai.ml.entities.CommandComponent>, <xref:str>]
  - name: compute
    description: The compute definition containing the compute information for the
      step.
    isRequired: true
    types:
    - <xref:str>
  - name: limits
    description: The limits for the sweep node.
    isRequired: true
    types:
    - <xref:azure.ai.ml.sweep.SweepJobLimits>
  - name: sampling_algorithm
    description: 'The sampling algorithm to use to sample inside the search space.

      Accepted values are: "random", "grid", or "bayesian".'
    isRequired: true
    types:
    - <xref:str>
  - name: objective
    description: 'The objective used to determine the target run with the local optimal

      hyperparameter in search space.'
    isRequired: true
    types:
    - <xref:azure.ai.ml.sweep.Objective>
  - name: early_termination_policy
    description: The early termination policy of the sweep node.
    isRequired: true
    types:
    - <xref:Union>[<xref:azure.mgmt.machinelearningservices.models.BanditPolicy,azure.mgmt.machinelearningservices.models.MedianStoppingPolicy,azure.mgmt.machinelearningservices.models.TruncationSelectionPolicy>]
  - name: search_space
    description: The hyperparameter search space to run trials in.
    isRequired: true
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.Choice>, <xref:azure.ai.ml.entities.LogNormal,azure.ai.ml.entities.LogUniform>,
      <xref:azure.ai.ml.entities.Normal>, <xref:azure.ai.ml.entities.QLogNormal,azure.ai.ml.entities.QLogUniform>,
      <xref:azure.ai.ml.entities.QNormal>, <xref:azure.ai.ml.entities.QUniform,azure.ai.ml.entities.Randint>,
      <xref:azure.ai.ml.entities.Uniform>]]
  - name: inputs
    description: Mapping of input data bindings used in the job.
    isRequired: true
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.Input>, <xref:str>, <xref:bool>,
      <xref:int>, <xref:float>]]
  - name: outputs
    description: Mapping of output data bindings used in the job.
    isRequired: true
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:azure.ai.ml.Output>]]
  - name: identity
    description: The identity that the training job will use while running on compute.
    isRequired: true
    types:
    - <xref:Union>[<xref:azure.ai.ml.ManagedIdentityConfiguration>, <xref:azure.ai.ml.AmlTokenConfiguration,azure.ai.ml.UserIdentityConfiguration>]
  - name: queue_settings
    description: The queue settings for the job.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.QueueSettings>
methods:
- uid: azure.ai.ml.entities.Sweep.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.ml.entities.Sweep.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.ml.entities.Sweep.dump
  name: dump
  summary: Dump the job content into a file in yaml format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs) -> None'
  parameters:
  - name: dest
    description: 'The destination to receive this job''s content.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    isRequired: true
    types:
    - <xref:Union>[<xref:PathLike>, <xref:str>, <xref:IO>[<xref:AnyStr>]]
- uid: azure.ai.ml.entities.Sweep.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  parameters:
  - name: type
    isRequired: true
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
- uid: azure.ai.ml.entities.Sweep.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Sweep.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.ml.entities.Sweep.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.ml.entities.Sweep.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.ml.entities.Sweep.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.ml.entities.Sweep.set_limits
  name: set_limits
  summary: Set limits for Sweep node. Leave parameters as None if you don't want to
    update corresponding values.
  signature: 'set_limits(*, max_concurrent_trials: int | None = None, max_total_trials:
    int | None = None, timeout: int | None = None, trial_timeout: int | None = None)
    -> None'
  parameters:
  - name: max_concurrent_trials
    description: maximum concurrent trial number.
  - name: max_total_trials
    description: maximum total trial number.
  - name: timeout
    description: total timeout in seconds for sweep node
  - name: trial_timeout
    description: timeout in seconds for each trial
- uid: azure.ai.ml.entities.Sweep.set_objective
  name: set_objective
  summary: 'Set the sweep object.. Leave parameters as None if you don''t want to
    update corresponding values.


    "minimize", "maximize".

    :type goal: str

    :keyword primary_metric: Name of the metric to optimize.

    :type primary_metric: str'
  signature: 'set_objective(*, goal: str | None = None, primary_metric: str | None
    = None) -> None'
  parameters:
  - name: goal
    description: 'Defines supported metric goals for hyperparameter tuning. Acceptable
      values are:'
- uid: azure.ai.ml.entities.Sweep.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Sweep.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.ml.entities.Sweep.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.ai.ml.entities.Sweep.base_path
  name: base_path
  summary: Base path of the resource.
  return:
    description: Base path of the resource
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Sweep.creation_context
  name: creation_context
  summary: Creation context.
  return:
    description: Creation metadata of the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.entities.Sweep.early_termination
  name: early_termination
  summary: The early termination policy for the sweep job.
  return:
    types:
    - <xref:Union>[<xref:str>, <xref:azure.ai.ml.sweep.BanditPolicy>, <xref:azure.ai.ml.sweep.MedianStoppingPolicy,azure.ai.ml.sweep.TruncationSelectionPolicy>]
- uid: azure.ai.ml.entities.Sweep.id
  name: id
  summary: Resource ID.
  return:
    description: Global id of the resource, Azure Resource Manager ID
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Sweep.inputs
  name: inputs
  summary: Get the inputs for the object.
  return:
    description: A dictionary containing the inputs for the object.
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.Input>, <xref:str>,
      <xref:bool>, <xref:int>, <xref:float>]]
- uid: azure.ai.ml.entities.Sweep.limits
  name: limits
  summary: Limits for sweep job.
  return:
    description: Limits for sweep job.
    types:
    - <xref:azure.ai.ml.sweep.SweepJobLimits>
- uid: azure.ai.ml.entities.Sweep.log_files
  name: log_files
  summary: Job output files.
  return:
    description: Dictionary of log names to url.
    types:
    - <xref:Optional>[<xref:Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.entities.Sweep.name
  name: name
  summary: Get the name of the node.
  return:
    description: The name of the node.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Sweep.outputs
  name: outputs
  summary: Get the outputs of the object.
  return:
    description: A dictionary containing the outputs for the object.
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:azure.ai.ml.entities.Output>]]
- uid: azure.ai.ml.entities.Sweep.sampling_algorithm
  name: sampling_algorithm
  summary: Sampling algorithm for sweep job.
  return:
    description: Sampling algorithm for sweep job.
    types:
    - <xref:azure.ai.ml.sweep.SamplingAlgorithm>
- uid: azure.ai.ml.entities.Sweep.search_space
  name: search_space
  summary: 'Dictionary of the hyperparameter search space.


    Each key is the name of a hyperparameter and its value is the parameter expression.'
  return:
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.Choice>, <xref:azure.ai.ml.entities.LogNormal,azure.ai.ml.entities.LogUniform>,
      <xref:azure.ai.ml.entities.Normal>, <xref:azure.ai.ml.entities.QLogNormal,azure.ai.ml.entities.QLogUniform>,
      <xref:azure.ai.ml.entities.QNormal>, <xref:azure.ai.ml.entities.QUniform,azure.ai.ml.entities.Randint>,
      <xref:azure.ai.ml.entities.Uniform>]]
- uid: azure.ai.ml.entities.Sweep.status
  name: status
  summary: "Status of the job.\n\nCommon values returned include \"Running\", \"Completed\"\
    , and \"Failed\".\n\n> [!NOTE]\n> NotStarted - This is a temporary state client-side\
    \ Run objects are in before cloud submission.\n>\n> \n>\n> Starting - The Run\
    \ has started being processed in the cloud. The caller has a run ID at this point.\n\
    >\n> \n>\n> Provisioning - Returned when on-demand compute is being created for\
    \ a given job submission.\n>\n> \n>\n> Preparing - The run environment is being\
    \ prepared:\n>\n> \n>\n> docker image build\n>\n> \n>\n> conda environment setup\n\
    >\n> \n>\n> Queued - The job is queued in the compute target. For example, in\
    \ BatchAI the job is in queued state\n>\n> \n>\n> while waiting for all the requested\
    \ nodes to be ready.\n>\n> \n>\n> Running - The job started to run in the compute\
    \ target.\n>\n> \n>\n> Finalizing - User code has completed and the run is in\
    \ post-processing stages.\n>\n> \n>\n> CancelRequested - Cancellation has been\
    \ requested for the job.\n>\n> \n>\n> Completed - The run completed successfully.\
    \ This includes both the user code and run\n>\n> \n>\n> post-processing stages.\n\
    >\n> \n>\n> Failed - The run failed. Usually the Error property on a run will\
    \ provide details as to why.\n>\n> \n>\n> Canceled - Follows a cancellation request\
    \ and indicates that the run is now successfully cancelled.\n>\n> \n>\n> NotResponding\
    \ - For runs that have Heartbeats enabled, no heartbeat has been recently sent.\n\
    >"
  return:
    description: Status of the job.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Sweep.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: URL to the job detail page.
    types:
    - <xref:Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Sweep.trial
  name: trial
  summary: The ID or instance of the command component or job to be run for the step.
  return:
    types:
    - <xref:azure.ai.ml.entities.CommandComponent>
- uid: azure.ai.ml.entities.Sweep.type
  name: type
  summary: Type of the job, supported are 'command' and 'sweep'.
  return:
    description: Type of the job.
    types:
    - <xref:str>
