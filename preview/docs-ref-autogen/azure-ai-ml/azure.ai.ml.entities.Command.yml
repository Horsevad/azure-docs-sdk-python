### YamlMime:PythonClass
uid: azure.ai.ml.entities.Command
name: Command
fullName: azure.ai.ml.entities.Command
module: azure.ai.ml.entities
inheritances:
- azure.ai.ml.entities._builders.base_node.BaseNode
- azure.ai.ml.entities._job.pipeline._io.mixin.NodeWithGroupInputMixin
summary: "Base class for command node, used for command component version consumption.\n\
  \nYou should not instantiate this class directly. Instead, you should\ncreate it\
  \ using the builder function: command().\n\n]\n:param outputs: A mapping of output\
  \ names to output data sources used in the job.\n:type outputs: dict[str, Union[str,\
  \ ~azure.ai.ml.Output]]\n:param limits: The limits for the command component or\
  \ job.\n:type limits: ~azure.ai.ml.entities.CommandJobLimits\n:param identity: The\
  \ identity that the command job will use while running on compute.\n:type identity:\
  \ Union[\n\n   dict[str, str],\n   ~azure.ai.ml.entities.ManagedIdentityConfiguration,\n\
  \   ~azure.ai.ml.entities.AmlTokenConfiguration,\n   ~azure.ai.ml.entities.UserIdentityConfiguration]"
constructor:
  syntax: 'Command(*, component: str | CommandComponent, compute: str | None = None,
    inputs: Dict[str, Input | str | bool | int | float | Enum] | None = None, outputs:
    Dict[str, str | Output] | None = None, limits: CommandJobLimits | None = None,
    identity: ManagedIdentityConfiguration | AmlTokenConfiguration | UserIdentityConfiguration
    | None = None, distribution: Dict | MpiDistribution | TensorFlowDistribution |
    PyTorchDistribution | RayDistribution | None = None, environment: Environment
    | str | None = None, environment_variables: Dict | None = None, resources: JobResourceConfiguration
    | None = None, services: Dict[str, JobService | JupyterLabJobService | SshJobService
    | TensorBoardJobService | VsCodeJobService] | None = None, queue_settings: QueueSettings
    | None = None, **kwargs)'
  parameters:
  - name: name
    description: The name of the command.
    isRequired: true
    types:
    - <xref:str>
  - name: description
    description: The description of the command.
    isRequired: true
    types:
    - <xref:str>
  - name: tags
    description: Tag dictionary. Tags can be added, removed, and updated.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: properties
    description: The job property dictionary.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: display_name
    description: The display name of the job.
    isRequired: true
    types:
    - <xref:str>
  - name: experiment_name
    description: 'The name of the experiment the job will be created under. Defaults
      to current directory

      name.'
    isRequired: true
    types:
    - <xref:str>
  - name: command
    description: The command to be executed during job.
    isRequired: true
    types:
    - <xref:str>
  - name: code
    description: 'The source code to run the job. Can be a local path or "http:",
      "https:", or "azureml:" url pointing

      to a remote location.'
    isRequired: true
    types:
    - <xref:str>
  - name: component
    description: The ID or instance of the command component or job to be run for
      the step.
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.ai.ml.entities.CommandComponent>]
  - name: compute
    description: The compute target the job will run on.
    isRequired: true
    types:
    - <xref:str>
  - name: inputs
    description: A mapping of input names to input data sources used in the job.
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.Input,str,bool,int,float,Enum,>]
  - name: distribution
    description: The configuration for distributed jobs.
    isRequired: true
    types:
    - <xref:Union>[<xref:dict>, <xref:azure.ai.ml.PyTorchDistribution>, <xref:azure.ai.ml.MpiDistribution,azure.ai.ml.TensorFlowDistribution>,
      <xref:azure.ai.ml.RayDistribution>]
  - name: environment
    description: The environment that the job will run in.
    isRequired: true
    types:
    - <xref:Union>[<xref:str>, <xref:azure.ai.ml.entities.Environment>]
  - name: environment_variables
    description: 'A dictionary of environment variable names and values.

      These environment variables are set on the process where the user script is
      being executed.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: resources
    description: The compute resource configuration for the command.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.JobResourceConfiguration>
  - name: services
    description: 'The interactive services for the node. This is an experimental parameter,
      and may change at any

      time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
      for more information.'
    isRequired: true
    types:
    - <xref:dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.JobService>,
      <xref:azure.ai.ml.entities.JupyterLabJobService,azure.ai.ml.entities.SshJobService>,
      <xref:azure.ai.ml.entities.TensorBoardJobService,azure.ai.ml.entities.VsCodeJobService>]]
  - name: queue_settings
    description: Queue settings for the job.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.QueueSettings>
methods:
- uid: azure.ai.ml.entities.Command.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.ai.ml.entities.Command.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.ai.ml.entities.Command.dump
  name: dump
  summary: Dump the job content into a file in yaml format.
  signature: 'dump(dest: str | PathLike | IO, **kwargs) -> None'
  parameters:
  - name: dest
    description: 'The destination to receive this job''s content.

      Must be either a path to a local file, or an already-open file stream.

      If dest is a file path, a new file will be created,

      and an exception is raised if the file exists.

      If dest is an open file, the file will be written to directly,

      and an exception will be raised if the file is not writable.'
    isRequired: true
    types:
    - <xref:Union>[<xref:PathLike>, <xref:str>, <xref:IO>[<xref:AnyStr>]]
- uid: azure.ai.ml.entities.Command.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  parameters:
  - name: type
    isRequired: true
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
- uid: azure.ai.ml.entities.Command.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Command.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.ai.ml.entities.Command.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.ai.ml.entities.Command.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.ai.ml.entities.Command.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.ai.ml.entities.Command.set_limits
  name: set_limits
  summary: Set limits for Command.
  signature: 'set_limits(*, timeout: int, **kwargs) -> None'
  parameters:
  - name: timeout
    description: The timeout for the job in seconds.
- uid: azure.ai.ml.entities.Command.set_queue_settings
  name: set_queue_settings
  summary: Set QueueSettings for the job.
  signature: 'set_queue_settings(*, job_tier: str | None = None, priority: str | None
    = None) -> None'
  parameters:
  - name: job_tier
    description: The job tier. Accepted values are "Spot", "Basic", "Standard", or
      "Premium".
  - name: priority
    description: The priority of the job on the compute. Defaults to "Medium".
- uid: azure.ai.ml.entities.Command.set_resources
  name: set_resources
  summary: Set resources for Command.
  signature: 'set_resources(*, instance_type: str | List[str] | None = None, instance_count:
    int | None = None, locations: List[str] | None = None, properties: Dict | None
    = None, docker_args: str | None = None, shm_size: str | None = None, **kwargs)
    -> None'
  parameters:
  - name: instance_type
    description: 'The type of compute instance to run the job on. If not specified,
      the job will run on

      the default compute target.'
  - name: instance_count
    description: 'The number of instances to run the job on. If not specified, the
      job will run on a

      single instance.'
  - name: locations
    description: 'The list of locations where the job will run. If not specified,
      the job will run on the

      default compute target.'
  - name: properties
    description: The properties of the job.
  - name: docker_args
    description: The Docker arguments for the job.
  - name: shm_size
    description: 'The size of the docker container''s shared memory block. This should
      be in the

      format of (number)(unit) where the number has to be greater than 0 and the unit
      can be one of

      b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).'
- uid: azure.ai.ml.entities.Command.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.ml.entities.Command.sweep
  name: sweep
  summary: "Turns the command into a sweep node with extra sweep run setting. The\
    \ command component\nin the current Command node will be used as its trial component.\
    \ A command node can sweep\nmultiple times, and the generated sweep node will\
    \ share the same trial component.\n\nThe metric must be logged while running the\
    \ trial component.\n:type primary_metric: str\n:keyword goal: The goal of the\
    \ Sweep objective. Accepted values are \"minimize\" or \"maximize\".\n:type goal:\
    \ str\n:keyword sampling_algorithm: The sampling algorithm to use inside the search\
    \ space. Defaults to \"random\".\nAcceptable values are \"random\", \"grid\",\
    \ or \"bayesian\".\n:type sampling_algorithm: str\n:keyword compute: The target\
    \ compute to run the node on. If not specified, the current node's compute\nwill\
    \ be used.\n:type compute: str\n:keyword max_total_trials: The maximum number\
    \ of trials to run. This value will overwrite value in\nCommandJob.limits if specified.\n\
    :type max_total_trials: int\n:keyword max_concurrent_trials: The maximum number\
    \ of concurrent trials for the Sweep job.\n:type max_concurrent_trials: int\n\
    :keyword max_total_trials: The maximum number of total trials for the Sweep Job.\n\
    :type max_total_trials: int\n:keyword timeout: The maximum run duration in seconds,\
    \ after which the job will be cancelled.\n:type timeout: int\n:keyword trial_timeout:\
    \ The Sweep Job trial timeout value in seconds.\n:type trial_timeout: int\n:keyword\
    \ early_termination_policy: The early termination policy of the sweep node. Acceptable\n\
    values are \"bandit\", \"median_stopping\", or \"truncation_selection\".\n:type\
    \ early_termination_policy: Union[~azure.ai.ml.sweep.BanditPolicy,\n~azure.ai.ml.sweep.TruncationSelectionPolicy,\
    \ ~azure.ai.ml.sweep.MedianStoppingPolicy, str]\n:keyword identity: The identity\
    \ that the job will use while running on compute.\n:type identity: Union[\n\n\
    \   ~azure.ai.ml.ManagedIdentityConfiguration,\n   ~azure.ai.ml.AmlTokenConfiguration,\n\
    \   ~azure.ai.ml.UserIdentityConfiguration]\n\n\"Standard\", or \"Premium\".\n\
    :type job_tier: str\n:keyword priority: **Experimental** The compute priority.\
    \ Accepted values are \"low\",\n\"medium\", and \"high\".\n:type priority: str\n\
    :return: A Sweep node with the component from current Command node as its trial\
    \ component.\n:rtype: ~azure.ai.ml.entities.Sweep"
  signature: 'sweep(*, primary_metric: str, goal: str, sampling_algorithm: str = ''random'',
    compute: str | None = None, max_concurrent_trials: int | None = None, max_total_trials:
    int | None = None, timeout: int | None = None, trial_timeout: int | None = None,
    early_termination_policy: EarlyTerminationPolicy | str | None = None, search_space:
    Dict[str, Choice | LogNormal | LogUniform | Normal | QLogNormal | QLogUniform
    | QNormal | QUniform | Randint | Uniform] | None = None, identity: ManagedIdentityConfiguration
    | AmlTokenConfiguration | UserIdentityConfiguration | None = None, queue_settings:
    QueueSettings | None = None, job_tier: str | None = None, priority: str | None
    = None) -> Sweep'
  parameters:
  - name: queue_settings
    description: The queue settings for the job.
  - name: job_tier
    description: '**Experimental** The job tier. Accepted values are "Spot", "Basic",'
- uid: azure.ai.ml.entities.Command.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.ai.ml.entities.Command.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.ai.ml.entities.Command.base_path
  name: base_path
  summary: Base path of the resource.
  return:
    description: Base path of the resource
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.code
  name: code
  summary: The source code to run the job.
  return:
    types:
    - <xref:Union>[<xref:str>, <xref:os.PathLike>]
- uid: azure.ai.ml.entities.Command.command
  name: command
  summary: Sets the command to be executed.
  return:
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.component
  name: component
  summary: The ID or instance of the command component or job to be run for the step.
  return:
    types:
    - <xref:Union>[<xref:str>, <xref:azure.ai.ml.entities.CommandComponent>]
- uid: azure.ai.ml.entities.Command.creation_context
  name: creation_context
  summary: Creation context.
  return:
    description: Creation metadata of the resource.
    types:
    - <xref:typing.Optional>[<xref:azure.ai.ml.entities.SystemData>]
- uid: azure.ai.ml.entities.Command.distribution
  name: distribution
  summary: 'The configuration for the distributed command component or job.


    ~azure.ai.ml.TensorFlowDistribution, ~azure.ai.ml.RayDistribution]'
  return:
    types:
    - <xref:Union>[<xref:azure.ai.ml.PyTorchDistribution>, <xref:azure.ai.ml.MpiDistribution,>
- uid: azure.ai.ml.entities.Command.id
  name: id
  summary: Resource ID.
  return:
    description: Global id of the resource, Azure Resource Manager ID
    types:
    - <xref:typing.Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.identity
  name: identity
  summary: 'The identity that the job will use while running on compute.


    ~azure.ai.ml.UserIdentityConfiguration]'
  return:
    types:
    - <xref:Union>[<xref:azure.ai.ml.ManagedIdentityConfiguration>, <xref:azure.ai.ml.AmlTokenConfiguration,>
- uid: azure.ai.ml.entities.Command.inputs
  name: inputs
  summary: Get the inputs for the object.
  return:
    description: A dictionary containing the inputs for the object.
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.Input>, <xref:str>,
      <xref:bool>, <xref:int>, <xref:float>]]
- uid: azure.ai.ml.entities.Command.log_files
  name: log_files
  summary: Job output files.
  return:
    description: Dictionary of log names to url.
    types:
    - <xref:Optional>[<xref:Dict>[<xref:str>, <xref:str>]]
- uid: azure.ai.ml.entities.Command.name
  name: name
  summary: Get the name of the node.
  return:
    description: The name of the node.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.outputs
  name: outputs
  summary: Get the outputs of the object.
  return:
    description: A dictionary containing the outputs for the object.
    types:
    - <xref:Dict>[<xref:str>, <xref:Union>[<xref:str>, <xref:azure.ai.ml.entities.Output>]]
- uid: azure.ai.ml.entities.Command.parameters
  name: parameters
  summary: MLFlow parameters to be logged during the job.
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
- uid: azure.ai.ml.entities.Command.queue_settings
  name: queue_settings
  summary: The queue settings for the command component or job.
  return:
    types:
    - <xref:azure.ai.ml.entities.QueueSettings>
- uid: azure.ai.ml.entities.Command.resources
  name: resources
  summary: The compute resource configuration for the command component or job.
  return:
    types:
    - <xref:azure.ai.ml.entities.JobResourceConfiguration>
- uid: azure.ai.ml.entities.Command.services
  name: services
  summary: 'The interactive services for the node.


    This is an experimental parameter, and may change at any time.

    Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
    for more information.'
  return:
    types:
    - <xref:dict>[<xref:str>, <xref:Union>[<xref:azure.ai.ml.entities.JobService>,
      <xref:azure.ai.ml.entities.JupyterLabJobService,azure.ai.ml.entities.SshJobService>,
      <xref:azure.ai.ml.entities.TensorBoardJobService,azure.ai.ml.entities.VsCodeJobService>]]
- uid: azure.ai.ml.entities.Command.status
  name: status
  summary: "Status of the job.\n\nCommon values returned include \"Running\", \"Completed\"\
    , and \"Failed\".\n\n> [!NOTE]\n> NotStarted - This is a temporary state client-side\
    \ Run objects are in before cloud submission.\n>\n> \n>\n> Starting - The Run\
    \ has started being processed in the cloud. The caller has a run ID at this point.\n\
    >\n> \n>\n> Provisioning - Returned when on-demand compute is being created for\
    \ a given job submission.\n>\n> \n>\n> Preparing - The run environment is being\
    \ prepared:\n>\n> \n>\n> docker image build\n>\n> \n>\n> conda environment setup\n\
    >\n> \n>\n> Queued - The job is queued in the compute target. For example, in\
    \ BatchAI the job is in queued state\n>\n> \n>\n> while waiting for all the requested\
    \ nodes to be ready.\n>\n> \n>\n> Running - The job started to run in the compute\
    \ target.\n>\n> \n>\n> Finalizing - User code has completed and the run is in\
    \ post-processing stages.\n>\n> \n>\n> CancelRequested - Cancellation has been\
    \ requested for the job.\n>\n> \n>\n> Completed - The run completed successfully.\
    \ This includes both the user code and run\n>\n> \n>\n> post-processing stages.\n\
    >\n> \n>\n> Failed - The run failed. Usually the Error property on a run will\
    \ provide details as to why.\n>\n> \n>\n> Canceled - Follows a cancellation request\
    \ and indicates that the run is now successfully cancelled.\n>\n> \n>\n> NotResponding\
    \ - For runs that have Heartbeats enabled, no heartbeat has been recently sent.\n\
    >"
  return:
    description: Status of the job.
    types:
    - <xref:str>
- uid: azure.ai.ml.entities.Command.studio_url
  name: studio_url
  summary: Azure ML studio endpoint.
  return:
    description: URL to the job detail page.
    types:
    - <xref:Optional>[<xref:str>]
- uid: azure.ai.ml.entities.Command.type
  name: type
  summary: Type of the job, supported are 'command' and 'sweep'.
  return:
    description: Type of the job.
    types:
    - <xref:str>
