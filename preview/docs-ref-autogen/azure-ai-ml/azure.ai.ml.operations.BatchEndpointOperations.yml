### YamlMime:PythonClass
uid: azure.ai.ml.operations.BatchEndpointOperations
name: BatchEndpointOperations
fullName: azure.ai.ml.operations.BatchEndpointOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml._scope_dependent_operations._ScopeDependentOperations
summary: 'BatchEndpointOperations.


  You should not instantiate this class directly. Instead, you should create an MLClient
  instance that instantiates it

  for you and attaches it as an attribute.'
constructor:
  syntax: 'BatchEndpointOperations(operation_scope: OperationScope, operation_config:
    OperationConfig, service_client_05_2022: AzureMachineLearningWorkspaces, all_operations:
    OperationsContainer, credentials: TokenCredential | None = None, **kwargs: Dict)'
  parameters:
  - name: operation_scope
    description: Scope variables for the operations classes of an MLClient object.
    isRequired: true
    types:
    - <xref:azure.ai.ml._scope_dependent_operations.OperationScope>
  - name: operation_config
    description: Common configuration for operations classes of an MLClient object.
    isRequired: true
    types:
    - <xref:azure.ai.ml._scope_dependent_operations.OperationConfig>
  - name: service_client_05_2022
    description: 'Service client to allow end users to operate on Azure Machine Learning
      Workspace

      resources.'
    isRequired: true
    types:
    - <xref:<xref:azure.ai.ml._restclient.v2022_05_01._azure_machine_learning_workspaces.
      AzureMachineLearningWorkspaces>>
  - name: all_operations
    description: All operations classes of an MLClient object.
    isRequired: true
    types:
    - <xref:azure.ai.ml._scope_dependent_operations.OperationsContainer>
  - name: credentials
    description: Credential to use for authentication.
    defaultValue: None
    types:
    - <xref:azure.core.credentials.TokenCredential>
methods:
- uid: azure.ai.ml.operations.BatchEndpointOperations.begin_create_or_update
  name: begin_create_or_update
  summary: Create or update a batch endpoint.
  signature: 'begin_create_or_update(endpoint: BatchEndpoint) -> LROPoller[BatchEndpoint]'
  parameters:
  - name: endpoint
    description: The endpoint entity.
    isRequired: true
    types:
    - <xref:azure.ai.ml.entities.BatchEndpoint>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.BatchEndpoint>]
- uid: azure.ai.ml.operations.BatchEndpointOperations.begin_delete
  name: begin_delete
  summary: Delete a batch Endpoint.
  signature: 'begin_delete(name: str) -> LROPoller[None]'
  parameters:
  - name: name
    description: Name of the batch endpoint.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.BatchEndpointOperations.get
  name: get
  summary: Get a Endpoint resource.
  signature: 'get(name: str) -> BatchEndpoint'
  parameters:
  - name: name
    description: Name of the endpoint.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: Endpoint object retrieved from the service.
    types:
    - <xref:azure.ai.ml.entities.BatchEndpoint>
- uid: azure.ai.ml.operations.BatchEndpointOperations.invoke
  name: invoke
  summary: Invokes the batch endpoint with the provided payload.
  signature: 'invoke(endpoint_name: str, *, deployment_name: str | None = None, inputs:
    Dict[str, Input] | None = None, **kwargs) -> BatchJob'
  parameters:
  - name: endpoint_name
    description: The endpoint name.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: '(Optional) The name of a specific deployment to invoke. This is
      optional.

      By default requests are routed to any of the deployments according to the traffic
      rules.'
    types:
    - <xref:str>
  - name: inputs
    description: '(Optional) A dictionary of existing data asset, public uri file
      or folder

      to use with the deployment'
    types:
    - <xref:typing.Dict>[<xref:str>, <xref:azure.ai.ml.Input>]
  return:
    description: The invoked batch deployment job.
    types:
    - <xref:azure.ai.ml.entities.BatchJob>
  exceptions:
  - type: azure.ai.ml.exceptions.ValidationException
    description: 'Raised if deployment cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.AssetException
    description: 'Raised if BatchEndpoint assets

      (e.g. Data, Code, Model, Environment) cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.ModelException
    description: 'Raised if BatchEndpoint model cannot be successfully validated.

      Details will be provided in the error message.'
  - type: azure.ai.ml.exceptions.EmptyDirectoryError
    description: Raised if local path provided points to an empty directory.
- uid: azure.ai.ml.operations.BatchEndpointOperations.list
  name: list
  summary: List endpoints of the workspace.
  signature: list() -> ItemPaged[BatchEndpoint]
  return:
    description: A list of endpoints
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.BatchEndpoint>]
- uid: azure.ai.ml.operations.BatchEndpointOperations.list_jobs
  name: list_jobs
  summary: List jobs under the provided batch endpoint deployment. This is only valid
    for batch endpoint.
  signature: 'list_jobs(endpoint_name: str) -> ItemPaged[BatchJob]'
  parameters:
  - name: endpoint_name
    description: The endpoint name
    isRequired: true
    types:
    - <xref:str>
  return:
    description: List of jobs
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.BatchJob>]
