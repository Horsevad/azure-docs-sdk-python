### YamlMime:PythonClass
uid: azure.mgmt.networkcloud.models.L2Network
name: L2Network
fullName: azure.mgmt.networkcloud.models.L2Network
module: azure.mgmt.networkcloud.models
inheritances:
- azure.mgmt.networkcloud.models._models_py3.TrackedResource
summary: 'L2Network represents a network that utilizes a single isolation domain set
  up for layer-2

  resources.


  Variables are only populated by the server, and will be ignored when sending a request.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'L2Network(*, location: str, extended_location: _models.ExtendedLocation,
    l2_isolation_domain_id: str, tags: Dict[str, str] | None = None, hybrid_aks_plugin_type:
    str | _models.HybridAksPluginType | None = None, interface_name: str | None =
    None, **kwargs: Any)'
  parameters:
  - name: tags
    description: Resource tags.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  - name: location
    description: The geo-location where the resource lives. Required.
    types:
    - <xref:str>
  - name: extended_location
    description: 'The extended location of the cluster associated with the resource.

      Required.'
    types:
    - <xref:azure.mgmt.networkcloud.models.ExtendedLocation>
  - name: hybrid_aks_plugin_type
    description: 'The network plugin type for Hybrid AKS. Known values are:

      "DPDK", "SRIOV", and "OSDevice".'
    types:
    - <xref:str>
    - <xref:azure.mgmt.networkcloud.models.HybridAksPluginType>
  - name: interface_name
    description: 'The default interface name for this L2 network in the virtual machine.

      This name can be overridden by the name supplied in the network attachment configuration
      of

      that virtual machine.'
    types:
    - <xref:str>
  - name: l2_isolation_domain_id
    description: 'The resource ID of the Network Fabric l2IsolationDomain.

      Required.'
    types:
    - <xref:str>
variables:
- description: 'Fully qualified resource ID for the resource. Ex -

    /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.'
  name: id
  types:
  - <xref:str>
- description: The name of the resource.
  name: name
  types:
  - <xref:str>
- description: 'The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
    or

    "Microsoft.Storage/storageAccounts".'
  name: type
  types:
  - <xref:str>
- description: 'Azure Resource Manager metadata containing createdBy and modifiedBy

    information.'
  name: system_data
  types:
  - <xref:azure.mgmt.networkcloud.models.SystemData>
- description: Resource tags.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: The geo-location where the resource lives. Required.
  name: location
  types:
  - <xref:str>
- description: 'The extended location of the cluster associated with the resource.

    Required.'
  name: extended_location
  types:
  - <xref:azure.mgmt.networkcloud.models.ExtendedLocation>
- description: 'The resource ID of the Network Cloud cluster this L2 network is associated

    with.'
  name: cluster_id
  types:
  - <xref:str>
- description: 'The more detailed status of the L2 network. Known values are: "Error",

    "Available", and "Provisioning".'
  name: detailed_status
  types:
  - <xref:str>
  - <xref:azure.mgmt.networkcloud.models.L2NetworkDetailedStatus>
- description: The descriptive message about the current detailed status.
  name: detailed_status_message
  types:
  - <xref:str>
- description: 'The list of Hybrid AKS cluster resource ID(s) that

    are associated with this L2 network.'
  name: hybrid_aks_clusters_associated_ids
  types:
  - <xref:list>[<xref:str>]
- description: 'The network plugin type for Hybrid AKS. Known values are: "DPDK",

    "SRIOV", and "OSDevice".'
  name: hybrid_aks_plugin_type
  types:
  - <xref:str>
  - <xref:azure.mgmt.networkcloud.models.HybridAksPluginType>
- description: 'The default interface name for this L2 network in the virtual machine.

    This name can be overridden by the name supplied in the network attachment configuration
    of

    that virtual machine.'
  name: interface_name
  types:
  - <xref:str>
- description: 'The resource ID of the Network Fabric l2IsolationDomain.

    Required.'
  name: l2_isolation_domain_id
  types:
  - <xref:str>
- description: 'The provisioning state of the L2 network. Known values are:

    "Succeeded", "Failed", "Canceled", "Provisioning", and "Accepted".'
  name: provisioning_state
  types:
  - <xref:str>
  - <xref:azure.mgmt.networkcloud.models.L2NetworkProvisioningState>
- description: 'The list of virtual machine resource ID(s), excluding

    any Hybrid AKS virtual machines, that are currently using this L2 network.'
  name: virtual_machines_associated_ids
  types:
  - <xref:list>[<xref:str>]
methods:
- uid: azure.mgmt.networkcloud.models.L2Network.as_dict
  name: as_dict
  summary: "Return a dict that can be serialized using json.dump.\n\nAdvanced usage\
    \ might optionally use a callback as parameter:\n\nKey is the attribute name used\
    \ in Python. Attr_desc\nis a dict of metadata. Currently contains 'type' with\
    \ the\nmsrest type and 'key' with the RestAPI encoded key.\nValue is the current\
    \ value in this object.\n\nThe string returned will be used to serialize the key.\n\
    If the return type is a list, this is considered hierarchical\nresult dict.\n\n\
    See the three examples in this file:\n\n* attribute_transformer \n\n* full_restapi_key_transformer\
    \ \n\n* last_restapi_key_transformer \n\nIf you want XML serialization, you can\
    \ pass the kwargs is_xml=True."
  signature: 'as_dict(keep_readonly: bool = True, key_transformer: ~typing.Callable[[str,
    ~typing.Dict[str, ~typing.Any], ~typing.Any], ~typing.Any] = <function attribute_transformer>,
    **kwargs: ~typing.Any) -> MutableMapping[str, Any]'
  parameters:
  - name: key_transformer
    description: A key transformer function.
    types:
    - <xref:function>
  - name: keep_readonly
    defaultValue: 'True'
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.mgmt.networkcloud.models.L2Network.deserialize
  name: deserialize
  summary: Parse a str using the RestAPI syntax and return a model.
  signature: 'deserialize(data: Any, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A str using RestAPI structure. JSON by default.
    isRequired: true
    types:
    - <xref:str>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.networkcloud.models.L2Network.enable_additional_properties_sending
  name: enable_additional_properties_sending
  signature: enable_additional_properties_sending() -> None
- uid: azure.mgmt.networkcloud.models.L2Network.from_dict
  name: from_dict
  summary: 'Parse a dict using given key extractor return a model.


    By default consider key

    extractors (rest_key_case_insensitive_extractor, attribute_key_case_insensitive_extractor

    and last_rest_key_case_insensitive_extractor)'
  signature: 'from_dict(data: Any, key_extractors: Callable[[str, Dict[str, Any],
    Any], Any] | None = None, content_type: str | None = None) -> ModelType'
  parameters:
  - name: data
    description: A dict using RestAPI structure
    isRequired: true
    types:
    - <xref:dict>
  - name: content_type
    description: JSON by default, set application/xml if XML.
    defaultValue: None
    types:
    - <xref:str>
  - name: key_extractors
    defaultValue: None
  return:
    description: An instance of this model
  exceptions:
  - type: DeserializationError if something went wrong
- uid: azure.mgmt.networkcloud.models.L2Network.is_xml_model
  name: is_xml_model
  signature: is_xml_model() -> bool
- uid: azure.mgmt.networkcloud.models.L2Network.serialize
  name: serialize
  summary: 'Return the JSON that would be sent to azure from this model.


    This is an alias to *as_dict(full_restapi_key_transformer, keep_readonly=False)*.


    If you want XML serialization, you can pass the kwargs is_xml=True.'
  signature: 'serialize(keep_readonly: bool = False, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: keep_readonly
    description: If you want to serialize the readonly attributes
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
