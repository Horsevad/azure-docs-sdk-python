### YamlMime:PythonClass
uid: azure.synapse.artifacts.models.DatabricksSparkPythonActivity
name: DatabricksSparkPythonActivity
fullName: azure.synapse.artifacts.models.DatabricksSparkPythonActivity
module: azure.synapse.artifacts.models
inheritances:
- azure.synapse.artifacts.models._models_py3.ExecutionActivity
summary: 'DatabricksSparkPython activity.


  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'DatabricksSparkPythonActivity(*, name: str, python_file: MutableMapping[str,
    Any], additional_properties: Dict[str, MutableMapping[str, Any]] | None = None,
    description: str | None = None, depends_on: List[_models.ActivityDependency] |
    None = None, user_properties: List[_models.UserProperty] | None = None, linked_service_name:
    _models.LinkedServiceReference | None = None, policy: _models.ActivityPolicy |
    None = None, parameters: List[MutableMapping[str, Any]] | None = None, libraries:
    List[Dict[str, MutableMapping[str, Any]]] | None = None, **kwargs)'
  parameters:
  - name: additional_properties
    description: 'Unmatched properties from the message are deserialized to this

      collection.'
    types:
    - <xref:dict>[<xref:str>, <xref:JSON>]
  - name: name
    description: Activity name. Required.
    types:
    - <xref:str>
  - name: description
    description: Activity description.
    types:
    - <xref:str>
  - name: depends_on
    description: Activity depends on condition.
    types:
    - <xref:azure.synapse.artifacts.operations.BigDataPoolsOperations.list>[<xref:azure.synapse.artifacts.models.ActivityDependency>]
  - name: user_properties
    description: Activity user properties.
    types:
    - <xref:azure.synapse.artifacts.operations.BigDataPoolsOperations.list>[<xref:azure.synapse.artifacts.models.UserProperty>]
  - name: linked_service_name
    description: Linked service reference.
    types:
    - <xref:azure.synapse.artifacts.models.LinkedServiceReference>
  - name: policy
    description: Activity policy.
    types:
    - <xref:azure.synapse.artifacts.models.ActivityPolicy>
  - name: python_file
    description: 'The URI of the Python file to be executed. DBFS paths are supported.

      Type: string (or Expression with resultType string). Required.'
    types:
    - <xref:JSON>
  - name: parameters
    description: Command line parameters that will be passed to the Python file.
    types:
    - <xref:azure.synapse.artifacts.operations.BigDataPoolsOperations.list>[<xref:JSON>]
  - name: libraries
    description: 'A list of libraries to be installed on the cluster that will execute
      the

      job.'
    types:
    - <xref:azure.synapse.artifacts.operations.BigDataPoolsOperations.list>[<xref:dict>[<xref:str>,
      <xref:JSON>]]
variables:
- description: 'Unmatched properties from the message are deserialized to this

    collection.'
  name: additional_properties
  types:
  - <xref:dict>[<xref:str>, <xref:JSON>]
- description: Activity name. Required.
  name: name
  types:
  - <xref:str>
- description: Type of activity. Required.
  name: type
  types:
  - <xref:str>
- description: Activity description.
  name: description
  types:
  - <xref:str>
- description: Activity depends on condition.
  name: depends_on
  types:
  - <xref:list>[<xref:azure.synapse.artifacts.models.ActivityDependency>]
- description: Activity user properties.
  name: user_properties
  types:
  - <xref:list>[<xref:azure.synapse.artifacts.models.UserProperty>]
- description: Linked service reference.
  name: linked_service_name
  types:
  - <xref:azure.synapse.artifacts.models.LinkedServiceReference>
- description: Activity policy.
  name: policy
  types:
  - <xref:azure.synapse.artifacts.models.ActivityPolicy>
- description: 'The URI of the Python file to be executed. DBFS paths are supported.
    Type:

    string (or Expression with resultType string). Required.'
  name: python_file
  types:
  - <xref:JSON>
- description: Command line parameters that will be passed to the Python file.
  name: parameters
  types:
  - <xref:list>[<xref:JSON>]
- description: A list of libraries to be installed on the cluster that will execute
    the job.
  name: libraries
  types:
  - <xref:list>[<xref:dict>[<xref:str>, <xref:JSON>]]
