### YamlMime:PythonClass
uid: azure.communication.jobrouter.models.ConditionalWorkerSelectorAttachment
name: ConditionalWorkerSelectorAttachment
fullName: azure.communication.jobrouter.models.ConditionalWorkerSelectorAttachment
module: azure.communication.jobrouter.models
inheritances:
- azure.communication.jobrouter.models._models.WorkerSelectorAttachment
summary: 'Describes a set of worker selectors that will be attached if the given condition
  resolves to

  true.


  All required parameters must be populated in order to send to server.'
constructor:
  syntax: 'ConditionalWorkerSelectorAttachment(*args: Any, **kwargs: Any)'
variables:
- description: 'The condition that must be true for the worker selectors to be attached.

    Required.'
  name: condition
  types:
  - <xref:azure.communication.jobrouter.models.RouterRule>
- description: The worker selectors to attach. Required.
  name: worker_selectors
  types:
  - <xref:list>[<xref:azure.communication.jobrouter.models.RouterWorkerSelector>]
- description: 'The type discriminator describing the type of worker selector attachment.
    Required.

    Discriminator value for ConditionalWorkerSelectorAttachment.'
  name: kind
  types:
  - <xref:str>
  - <xref:azure.communication.jobrouter.models.CONDITIONAL>
attributes:
- uid: azure.communication.jobrouter.models.ConditionalWorkerSelectorAttachment.condition
  name: condition
  summary: The condition that must be true for the worker selectors to be attached.
    Required.
  signature: 'condition: _models.RouterRule'
- uid: azure.communication.jobrouter.models.ConditionalWorkerSelectorAttachment.kind
  name: kind
  summary: 'The type discriminator describing the type of worker selector attachment.
    Required.

    Discriminator value for ConditionalWorkerSelectorAttachment.'
  signature: 'kind: CONDITIONAL: ''conditional''>]'
- uid: azure.communication.jobrouter.models.ConditionalWorkerSelectorAttachment.worker_selectors
  name: worker_selectors
  summary: The worker selectors to attach. Required.
  signature: 'worker_selectors: List[_models.RouterWorkerSelector]'
