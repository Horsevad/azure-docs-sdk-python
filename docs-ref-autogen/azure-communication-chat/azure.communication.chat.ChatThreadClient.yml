### YamlMime:PythonClass
uid: azure.communication.chat.ChatThreadClient
name: ChatThreadClient
fullName: azure.communication.chat.ChatThreadClient
module: azure.communication.chat
inheritances:
- builtins.object
summary: 'A client to interact with the AzureCommunicationService Chat gateway.

  Instances of this class is normally retrieved by ChatClient.get_chat_thread_client()


  This client provides operations to add participant(s) to chat thread, remove participant
  from

  chat thread, send message, delete message, update message, send typing notifications,

  send and list read receipt'
constructor:
  syntax: 'ChatThreadClient(endpoint: str, credential: CommunicationTokenCredential,
    thread_id: str, **kwargs: Any)'
  parameters:
  - name: endpoint
    description: The endpoint of the Azure Communication resource.
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'The credentials with which to authenticate. The value contains a
      User

      Access Token'
    isRequired: true
    types:
    - <xref:azure.communication.chat.CommunicationTokenCredential>
  - name: thread_id
    description: The unique thread id.
    isRequired: true
    types:
    - <xref:str>
variables:
- description: Chat thread id.
  name: thread_id
  types:
  - <xref:str>
methods:
- uid: azure.communication.chat.ChatThreadClient.add_participants
  name: add_participants
  summary: 'Adds thread participants to a thread. If participants already exist, no
    change occurs.


    If all participants are added successfully, then an empty list is returned;

    otherwise, a list of tuple(chat_thread_participant, chat_error) is returned,

    of failed participants and its respective error'
  signature: 'add_participants(thread_participants: List[ChatParticipant], **kwargs:
    Any) -> List[Tuple[ChatParticipant, ChatError]]'
  parameters:
  - name: thread_participants
    description: Thread participants to be added to the thread.
    isRequired: true
    types:
    - <xref:List>[<xref:azure.communication.chat.ChatParticipant>]
  return:
    description: List[Tuple[ChatParticipant, ChatError]]
    types:
    - <xref:List>[<xref:Tuple>[<xref:azure.communication.chat.ChatParticipant>, <xref:azure.communication.chat.ChatError>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.chat.ChatThreadClient.close
  name: close
  signature: close() -> None
- uid: azure.communication.chat.ChatThreadClient.delete_message
  name: delete_message
  summary: Deletes a message.
  signature: 'delete_message(message_id: str, **kwargs: Any) -> None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.get_message
  name: get_message
  summary: Gets a message by id.
  signature: 'get_message(message_id: str, **kwargs: Any) -> ChatMessage'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: ChatMessage
    types:
    - <xref:azure.communication.chat.ChatMessage>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.get_properties
  name: get_properties
  summary: Gets the properties of the chat thread.
  signature: 'get_properties(**kwargs: Any) -> ChatThreadProperties'
  return:
    description: ChatThreadProperties
    types:
    - <xref:azure.communication.chat.ChatThreadProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.communication.chat.ChatThreadClient.list_messages
  name: list_messages
  summary: 'Gets a list of messages from a thread.


    The timestamp should be in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`.

    :return: An iterator like instance of ChatMessage

    :rtype: ~azure.core.paging.ItemPaged[~azure.communication.chat.ChatMessage]

    :raises: ~azure.core.exceptions.HttpResponseError, ValueError'
  signature: 'list_messages(**kwargs: Any) -> ItemPaged[ChatMessage]'
  parameters:
  - name: results_per_page
    description: The maximum number of messages to be returned per page.
    types:
    - <xref:int>
  - name: start_time
    description: The earliest point in time to get messages up to.
    types:
    - <xref:datetime.datetime>
- uid: azure.communication.chat.ChatThreadClient.list_participants
  name: list_participants
  summary: Gets the participants of a thread.
  signature: 'list_participants(**kwargs: Any) -> ItemPaged[ChatParticipant]'
  parameters:
  - name: results_per_page
    description: The maximum number of participants to be returned per page.
    types:
    - <xref:int>
  - name: skip
    description: Skips participants up to a specified position in response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of ChatParticipant
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.communication.chat.ChatParticipant>]
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.list_read_receipts
  name: list_read_receipts
  summary: Gets read receipts for a thread.
  signature: 'list_read_receipts(**kwargs: Any) -> ItemPaged[ChatMessageReadReceipt]'
  parameters:
  - name: results_per_page
    description: The maximum number of chat message read receipts to be returned per
      page.
    types:
    - <xref:int>
  - name: skip
    description: Skips chat message read receipts up to a specified position in response.
    types:
    - <xref:int>
  return:
    description: An iterator like instance of ChatMessageReadReceipt
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.communication.chat.ChatMessageReadReceipt>]
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.remove_participant
  name: remove_participant
  summary: Remove a participant from a thread.
  signature: 'remove_participant(identifier: CommunicationIdentifier, **kwargs: Any)
    -> None'
  parameters:
  - name: identifier
    description: Required. Identifier of the thread participant to remove from the
      thread.
    isRequired: true
    types:
    - <xref:azure.communication.chat.CommunicationIdentifier>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.send_message
  name: send_message
  summary: Sends a message to a thread.
  signature: 'send_message(content: str, **kwargs: Any) -> SendChatMessageResult'
  parameters:
  - name: content
    description: Required. Chat message content.
    isRequired: true
    types:
    - <xref:str>
  - name: chat_message_type
    description: 'The chat message type. Possible values include: "text", "html".
      Default: ChatMessageType.TEXT'
    types:
    - <xref:Union>[<xref:str>, <xref:azure.communication.chat.ChatMessageType>]
  - name: sender_display_name
    description: 'The display name of the message sender. This property is used to

      populate sender name for push notifications.'
    types:
    - <xref:str>
  - name: metadata
    description: Message metadata.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: SendChatMessageResult
    types:
    - <xref:azure.communication.chat.SendChatMessageResult>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.send_read_receipt
  name: send_read_receipt
  summary: Posts a read receipt event to a chat thread, on behalf of a user.
  signature: 'send_read_receipt(message_id: str, **kwargs: Any) -> None'
  parameters:
  - name: message_id
    description: Required. Id of the latest message read by current user.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.send_typing_notification
  name: send_typing_notification
  summary: Posts a typing event to a thread, on behalf of a user.
  signature: 'send_typing_notification(**kwargs: Any) -> None'
  parameters:
  - name: sender_display_name
    description: 'The display name of the typing notification sender. This property

      is used to populate sender name for push notifications.'
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.update_message
  name: update_message
  summary: Updates a message.
  signature: 'update_message(message_id: str, content: str | None = None, **kwargs:
    Any) -> None'
  parameters:
  - name: message_id
    description: Required. The message id.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: Chat message content.
    isRequired: true
    types:
    - <xref:str>
  - name: metadata
    description: Message metadata.
    types:
    - <xref:dict>[<xref:str>, <xref:str>]
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
- uid: azure.communication.chat.ChatThreadClient.update_topic
  name: update_topic
  summary: Updates a thread's properties.
  signature: 'update_topic(topic: str | None = None, **kwargs: Any) -> None'
  parameters:
  - name: topic
    description: 'Thread topic. If topic is not specified, the update will succeed
      but

      chat thread properties will not be changed.'
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: <xref:azure.core.exceptions.HttpResponseError>, <xref:ValueError>
attributes:
- uid: azure.communication.chat.ChatThreadClient.thread_id
  name: thread_id
  summary: Gets the thread id from the client.
  return:
    types:
    - <xref:str>
