### YamlMime:PythonClass
uid: azure.identity.broker.InteractiveBrowserBrokerCredential
name: InteractiveBrowserBrokerCredential
fullName: azure.identity.broker.InteractiveBrowserBrokerCredential
module: azure.identity.broker
inheritances:
- azure.identity._credentials.browser.InteractiveBrowserCredential
summary: 'Uses an authentication broker to interactively sign in a user.


  Currently, only the Windows authentication broker, Web Account Manager (WAM), is
  supported. Users on macOS and Linux

  will be authenticated through a browser.


  <xref:azure.identity.broker.get_token> opens a browser to a login URL provided by
  Microsoft Entra ID and authenticates a user

  there with the authorization code flow, using PKCE (Proof Key for Code Exchange)
  internally to protect the code.'
constructor:
  syntax: 'InteractiveBrowserBrokerCredential(**kwargs: Any)'
  parameters:
  - name: authority
    description: 'Authority of a Microsoft Entra endpoint, for example "login.microsoftonline.com",

      the authority for Azure Public Cloud (which is the default). <xref:azure.identity.AzureAuthorityHosts>

      defines authorities for other clouds.'
    types:
    - <xref:str>
  - name: tenant_id
    description: 'a Microsoft Entra tenant ID. Defaults to the "organizations" tenant,
      which can

      authenticate work or school accounts.'
    types:
    - <xref:str>
  - name: client_id
    description: 'Client ID of the Microsoft Entra application users will sign in
      to. If

      unspecified, users will authenticate to an Azure development application.'
    types:
    - <xref:str>
  - name: login_hint
    description: 'a username suggestion to pre-fill the login page''s username/email
      address field. A user

      may still log in with a different username.'
    types:
    - <xref:str>
  - name: timeout
    description: seconds to wait for the user to complete authentication. Defaults
      to 300 (5 minutes).
    types:
    - <xref:int>
  - name: parent_window_handle
    description: 'If your app is a GUI app running on a modern Windows system,

      and your app opts in to use broker via *allow_broker*, you are required to also
      provide its window handle,

      so that the sign in UI window will properly pop up on top of your window.'
    types:
    - <xref:int>
  - name: enable_msa_passthrough
    description: 'Determines whether Microsoft Account (MSA) passthrough is enabled.
      Note, this

      is only needed for select legacy first-party applications. Defaults to False.'
    types:
    - <xref:bool>
  - name: disable_instance_discovery
    description: 'Determines whether or not instance discovery is performed when attempting

      to authenticate. Setting this to true will completely disable both instance
      discovery and authority validation.

      This functionality is intended for use in scenarios where the metadata endpoint
      cannot be reached, such as in

      private clouds or Azure Stack. The process of instance discovery entails retrieving
      authority metadata from

      [https://login.microsoft.com/](https://login.microsoft.com/) to validate the
      authority. By setting this to **True**, the validation of the

      authority is disabled. As a result, it is crucial to ensure that the configured
      authority host is valid and

      trustworthy.'
    types:
    - <xref:bool>
