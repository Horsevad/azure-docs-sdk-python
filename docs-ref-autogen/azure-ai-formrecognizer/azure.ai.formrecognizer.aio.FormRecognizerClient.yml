### YamlMime:PythonClass
uid: azure.ai.formrecognizer.aio.FormRecognizerClient
name: FormRecognizerClient
fullName: azure.ai.formrecognizer.aio.FormRecognizerClient
module: azure.ai.formrecognizer.aio
inheritances:
- azure.ai.formrecognizer.aio._form_base_client_async.FormRecognizerClientBaseAsync
summary: 'FormRecognizerClient extracts information from forms and images into structured
  data.

  It is the interface to use for analyzing with prebuilt models (receipts, business
  cards,

  invoices, identity documents), recognizing content/layout from forms, and analyzing

  custom forms from trained models. It provides different methods based on inputs
  from a

  URL and inputs from a stream.


  > [!NOTE]

  > FormRecognizerClient should be used with API versions <=v2.1.

  >

  > To use API versions 2022-08-31 and up, instantiate a DocumentAnalysisClient.

  >'
constructor:
  syntax: 'FormRecognizerClient(endpoint: str, credential: AzureKeyCredential | AsyncTokenCredential,
    **kwargs: Any)'
  parameters:
  - name: endpoint
    description: 'Supported Cognitive Services endpoints (protocol and hostname,

      for example: [https://westus2.api.cognitive.microsoft.com](https://westus2.api.cognitive.microsoft.com)).'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'Credentials needed for the client to connect to Azure.

      This is an instance of AzureKeyCredential if using an API key or a token

      credential from <xref:azure.identity>.'
    isRequired: true
    types:
    - <xref:azure.core.credentials.AzureKeyCredential>
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  - name: api_version
    description: 'The API version of the service to use for requests. It defaults
      to API version v2.1.

      Setting to an older version may result in reduced feature compatibility. To
      use the

      latest supported API version and features, instantiate a DocumentAnalysisClient
      instead.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormRecognizerApiVersion>
methods:
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_business_cards
  name: begin_recognize_business_cards
  summary: 'Extract field text and semantic values from a given business card.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'' or ''image/bmp''.


    See fields found on a business card here:

    [https://aka.ms/formrecognizer/businesscardfields](https://aka.ms/formrecognizer/businesscardfields)


    New in version v2.1: The *begin_recognize_business_cards* client method'
  signature: 'async begin_recognize_business_cards(business_card: bytes | IO[bytes],
    **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: business_card
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: locale
    description: 'Locale of the business card. Supported locales include: en-US, en-AU,
      en-CA, en-GB,

      and en-IN.'
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_business_cards_from_url
  name: begin_recognize_business_cards_from_url
  summary: 'Extract field text and semantic values from a given business card.

    The input document must be the location (URL) of the card to be analyzed.


    See fields found on a business card here:

    [https://aka.ms/formrecognizer/businesscardfields](https://aka.ms/formrecognizer/businesscardfields)


    New in version v2.1: The *begin_recognize_business_cards_from_url* client method'
  signature: 'async begin_recognize_business_cards_from_url(business_card_url: str,
    **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: business_card_url
    description: 'The URL of the business card to analyze. The input must be a valid,
      encoded URL

      of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: locale
    description: 'Locale of the business card. Supported locales include: en-US, en-AU,
      en-CA, en-GB,

      and en-IN.'
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_content
  name: begin_recognize_content
  summary: 'Extract text and content/layout information from a given document.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'' or ''image/bmp''.


    New in version v2.1: The *pages*, *language* and *reading_order* keyword arguments
    and support for image/bmp content'
  signature: 'async begin_recognize_content(form: bytes | IO[bytes], **kwargs: Any)
    -> AsyncLROPoller[List[FormPage]]'
  parameters:
  - name: form
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: language
    description: 'The BCP-47 language code of the text in the document.

      See supported language codes here:

      [https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support](https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support).

      Content supports auto language identification and multilanguage documents, so
      only

      provide a language code if you would like to force the documented to be processed
      as

      that specific language.'
    types:
    - <xref:str>
  - name: reading_order
    description: 'Reading order algorithm to sort the text lines returned. Supported

      reading orders include: basic (default), natural. Set ''basic'' to sort lines
      left to right and top

      to bottom, although in some cases proximity is treated with higher priority.
      Set ''natural'' to sort

      lines by using positional information to keep nearby lines together.'
    types:
    - <xref:str>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.FormPage>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.FormPage>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_content_from_url
  name: begin_recognize_content_from_url
  summary: 'Extract text and layout information from a given document.

    The input document must be the location (URL) of the document to be analyzed.


    New in version v2.1: The *pages*, *language* and *reading_order* keyword arguments
    and support for image/bmp content'
  signature: 'async begin_recognize_content_from_url(form_url: str, **kwargs: Any)
    -> AsyncLROPoller[List[FormPage]]'
  parameters:
  - name: form_url
    description: 'The URL of the form to analyze. The input must be a valid, encoded
      URL

      of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: language
    description: 'The BCP-47 language code of the text in the document.

      See supported language codes here:

      [https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support](https://docs.microsoft.com/azure/cognitive-services/form-recognizer/language-support).

      Content supports auto language identification and multilanguage documents, so
      only

      provide a language code if you would like to force the documented to be processed
      as

      that specific language.'
    types:
    - <xref:str>
  - name: reading_order
    description: 'Reading order algorithm to sort the text lines returned. Supported

      reading orders include: basic (default), natural. Set ''basic'' to sort lines
      left to right and top

      to bottom, although in some cases proximity is treated with higher priority.
      Set ''natural'' to sort

      lines by using positional information to keep nearby lines together.'
    types:
    - <xref:str>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.FormPage>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.FormPage>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_custom_forms
  name: begin_recognize_custom_forms
  summary: 'Analyze a custom form with a model trained with or without labels. The
    form

    to analyze should be of the same type as the forms that were used to train the
    model.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'', or ''image/bmp''.'
  signature: 'async begin_recognize_custom_forms(model_id: str, form: bytes | IO[bytes],
    **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: model_id
    description: Custom model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: form
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_custom_forms_from_url
  name: begin_recognize_custom_forms_from_url
  summary: 'Analyze a custom form with a model trained with or without labels. The
    form

    to analyze should be of the same type as the forms that were used to train the
    model.

    The input document must be the location (URL) of the document to be analyzed.'
  signature: 'async begin_recognize_custom_forms_from_url(model_id: str, form_url:
    str, **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: model_id
    description: Custom model identifier.
    isRequired: true
    types:
    - <xref:str>
  - name: form_url
    description: 'The URL of the form to analyze. The input must be a valid, encoded
      URL

      of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_identity_documents
  name: begin_recognize_identity_documents
  summary: 'Extract field text and semantic values from a given identity document.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'' or ''image/bmp''.


    See fields found on an identity document here:

    [https://aka.ms/formrecognizer/iddocumentfields](https://aka.ms/formrecognizer/iddocumentfields)


    New in version v2.1: The *begin_recognize_identity_documents* client method'
  signature: 'async begin_recognize_identity_documents(identity_document: bytes |
    IO[bytes], **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: identity_document
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_identity_documents_from_url
  name: begin_recognize_identity_documents_from_url
  summary: 'Extract field text and semantic values from a given identity document.

    The input document must be the location (URL) of the identity document to be analyzed.


    See fields found on an identity document here:

    [https://aka.ms/formrecognizer/iddocumentfields](https://aka.ms/formrecognizer/iddocumentfields)


    New in version v2.1: The *begin_recognize_identity_documents_from_url* client
    method'
  signature: 'async begin_recognize_identity_documents_from_url(identity_document_url:
    str, **kwargs: Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: identity_document_url
    description: 'The URL of the identity document to analyze. The input must be a
      valid,

      encoded URL of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_invoices
  name: begin_recognize_invoices
  summary: 'Extract field text and semantic values from a given invoice.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'' or ''image/bmp''.


    See fields found on a invoice here:

    [https://aka.ms/formrecognizer/invoicefields](https://aka.ms/formrecognizer/invoicefields)


    New in version v2.1: The *begin_recognize_invoices* client method'
  signature: 'async begin_recognize_invoices(invoice: bytes | IO[bytes], **kwargs:
    Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: invoice
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: locale
    description: 'Locale of the invoice. Supported locales include: en-US'
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_invoices_from_url
  name: begin_recognize_invoices_from_url
  summary: 'Extract field text and semantic values from a given invoice.

    The input document must be the location (URL) of the invoice to be analyzed.


    See fields found on a invoice card here:

    [https://aka.ms/formrecognizer/invoicefields](https://aka.ms/formrecognizer/invoicefields)


    New in version v2.1: The *begin_recognize_invoices_from_url* client method'
  signature: 'async begin_recognize_invoices_from_url(invoice_url: str, **kwargs:
    Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: invoice_url
    description: 'The URL of the invoice to analyze. The input must be a valid, encoded
      URL

      of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: locale
    description: 'Locale of the invoice. Supported locales include: en-US'
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_receipts
  name: begin_recognize_receipts
  summary: 'Extract field text and semantic values from a given sales receipt.

    The input document must be of one of the supported content types - ''application/pdf'',

    ''image/jpeg'', ''image/png'', ''image/tiff'' or ''image/bmp''.


    See fields found on a receipt here:

    [https://aka.ms/formrecognizer/receiptfields](https://aka.ms/formrecognizer/receiptfields)


    New in version v2.1: The *locale* keyword argument and support for image/bmp content'
  signature: 'async begin_recognize_receipts(receipt: bytes | IO[bytes], **kwargs:
    Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: receipt
    description: JPEG, PNG, PDF, TIFF, or BMP type file stream or bytes.
    isRequired: true
    types:
    - <xref:bytes>
    - <xref:IO>[<xref:bytes>]
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: content_type
    description: 'Content-type of the body sent to the API. Content-type is

      auto-detected, but can be overridden by passing this keyword argument. For options,

      see <xref:azure.ai.formrecognizer.FormContentType>.'
    types:
    - <xref:str>
    - <xref:azure.ai.formrecognizer.FormContentType>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: locale
    description: 'Locale of the receipt. Supported locales include: en-US, en-AU,
      en-CA, en-GB,

      and en-IN.'
    types:
    - <xref:str>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.begin_recognize_receipts_from_url
  name: begin_recognize_receipts_from_url
  summary: 'Extract field text and semantic values from a given sales receipt.

    The input document must be the location (URL) of the receipt to be analyzed.


    See fields found on a receipt here:

    [https://aka.ms/formrecognizer/receiptfields](https://aka.ms/formrecognizer/receiptfields)


    New in version v2.1: The *locale* keyword argument and support for image/bmp content'
  signature: 'async begin_recognize_receipts_from_url(receipt_url: str, **kwargs:
    Any) -> AsyncLROPoller[List[RecognizedForm]]'
  parameters:
  - name: receipt_url
    description: 'The URL of the receipt to analyze. The input must be a valid, encoded
      URL

      of one of the supported formats: JPEG, PNG, PDF, TIFF, or BMP.'
    isRequired: true
    types:
    - <xref:str>
  - name: include_field_elements
    description: 'Whether or not to include all lines per page and field elements
      such as lines, words,

      and selection marks for each form field.'
    types:
    - <xref:bool>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: locale
    description: 'Locale of the receipt. Supported locales include: en-US, en-AU,
      en-CA, en-GB,

      and en-IN.'
    types:
    - <xref:str>
  - name: pages
    description: 'Custom page numbers for multi-page documents(PDF/TIFF). Input the
      page numbers

      and/or ranges of pages you want to get in the result. For a range of pages,
      use a hyphen, like

      *pages=["1-3", "5-6"]*. Separate each page number or range with a comma.'
    types:
    - <xref:list>[<xref:str>]
  return:
    description: 'An instance of an AsyncLROPoller. Call *result()* on the poller

      object to return a list[<xref:azure.ai.formrecognizer.RecognizedForm>].'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:list>[<xref:azure.ai.formrecognizer.RecognizedForm>]]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.ai.formrecognizer.aio.FormRecognizerClient.close
  name: close
  summary: Close the <xref:azure.ai.formrecognizer.aio.FormRecognizerClient> session.
  signature: async close() -> None
